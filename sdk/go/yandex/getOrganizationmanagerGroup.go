// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex.Cloud Organization Manager Group. For more information, see
// [the official documentation](https://cloud.yandex.com/en-ru/docs/organization/manage-groups).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			group, err := yandex.LookupOrganizationmanagerGroup(ctx, &GetOrganizationmanagerGroupArgs{
//				GroupId:        pulumi.StringRef("some_group_id"),
//				OrganizationId: pulumi.StringRef("some_organization_id"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("myGroup.name", group.Name)
//			return nil
//		})
//	}
//
// ```
func LookupOrganizationmanagerGroup(ctx *pulumi.Context, args *LookupOrganizationmanagerGroupArgs, opts ...pulumi.InvokeOption) (*LookupOrganizationmanagerGroupResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupOrganizationmanagerGroupResult
	err := ctx.Invoke("yandex:index/getOrganizationmanagerGroup:getOrganizationmanagerGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrganizationmanagerGroup.
type LookupOrganizationmanagerGroupArgs struct {
	// ID of a Group.
	GroupId *string `pulumi:"groupId"`
	// Name of a Group.
	Name *string `pulumi:"name"`
	// Organization that the Group belongs to. If value is omitted, the default provider organization is used.
	OrganizationId *string `pulumi:"organizationId"`
}

// A collection of values returned by getOrganizationmanagerGroup.
type LookupOrganizationmanagerGroupResult struct {
	// The Group creation timestamp.
	CreatedAt string `pulumi:"createdAt"`
	// The description of the Group.
	Description string `pulumi:"description"`
	GroupId     string `pulumi:"groupId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of members of the Group. The structure is documented below.
	Members        []GetOrganizationmanagerGroupMember `pulumi:"members"`
	Name           string                              `pulumi:"name"`
	OrganizationId *string                             `pulumi:"organizationId"`
}

func LookupOrganizationmanagerGroupOutput(ctx *pulumi.Context, args LookupOrganizationmanagerGroupOutputArgs, opts ...pulumi.InvokeOption) LookupOrganizationmanagerGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupOrganizationmanagerGroupResult, error) {
			args := v.(LookupOrganizationmanagerGroupArgs)
			r, err := LookupOrganizationmanagerGroup(ctx, &args, opts...)
			var s LookupOrganizationmanagerGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupOrganizationmanagerGroupResultOutput)
}

// A collection of arguments for invoking getOrganizationmanagerGroup.
type LookupOrganizationmanagerGroupOutputArgs struct {
	// ID of a Group.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// Name of a Group.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Organization that the Group belongs to. If value is omitted, the default provider organization is used.
	OrganizationId pulumi.StringPtrInput `pulumi:"organizationId"`
}

func (LookupOrganizationmanagerGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrganizationmanagerGroupArgs)(nil)).Elem()
}

// A collection of values returned by getOrganizationmanagerGroup.
type LookupOrganizationmanagerGroupResultOutput struct{ *pulumi.OutputState }

func (LookupOrganizationmanagerGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrganizationmanagerGroupResult)(nil)).Elem()
}

func (o LookupOrganizationmanagerGroupResultOutput) ToLookupOrganizationmanagerGroupResultOutput() LookupOrganizationmanagerGroupResultOutput {
	return o
}

func (o LookupOrganizationmanagerGroupResultOutput) ToLookupOrganizationmanagerGroupResultOutputWithContext(ctx context.Context) LookupOrganizationmanagerGroupResultOutput {
	return o
}

// The Group creation timestamp.
func (o LookupOrganizationmanagerGroupResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerGroupResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the Group.
func (o LookupOrganizationmanagerGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupOrganizationmanagerGroupResultOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerGroupResult) string { return v.GroupId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupOrganizationmanagerGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of members of the Group. The structure is documented below.
func (o LookupOrganizationmanagerGroupResultOutput) Members() GetOrganizationmanagerGroupMemberArrayOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerGroupResult) []GetOrganizationmanagerGroupMember { return v.Members }).(GetOrganizationmanagerGroupMemberArrayOutput)
}

func (o LookupOrganizationmanagerGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupOrganizationmanagerGroupResultOutput) OrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerGroupResult) *string { return v.OrganizationId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOrganizationmanagerGroupResultOutput{})
}
