// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MdbGreenplumCluster struct {
	pulumi.CustomResourceState

	Access             MdbGreenplumClusterAccessOutput            `pulumi:"access"`
	AssignPublicIp     pulumi.BoolOutput                          `pulumi:"assignPublicIp"`
	BackupWindowStart  MdbGreenplumClusterBackupWindowStartOutput `pulumi:"backupWindowStart"`
	CreatedAt          pulumi.StringOutput                        `pulumi:"createdAt"`
	DeletionProtection pulumi.BoolOutput                          `pulumi:"deletionProtection"`
	Description        pulumi.StringPtrOutput                     `pulumi:"description"`
	Environment        pulumi.StringOutput                        `pulumi:"environment"`
	FolderId           pulumi.StringOutput                        `pulumi:"folderId"`
	GreenplumConfig    pulumi.StringMapOutput                     `pulumi:"greenplumConfig"`
	Health             pulumi.StringOutput                        `pulumi:"health"`
	Labels             pulumi.StringMapOutput                     `pulumi:"labels"`
	MaintenanceWindow  MdbGreenplumClusterMaintenanceWindowOutput `pulumi:"maintenanceWindow"`
	MasterHostCount    pulumi.IntOutput                           `pulumi:"masterHostCount"`
	MasterHosts        MdbGreenplumClusterMasterHostArrayOutput   `pulumi:"masterHosts"`
	MasterSubcluster   MdbGreenplumClusterMasterSubclusterOutput  `pulumi:"masterSubcluster"`
	Name               pulumi.StringOutput                        `pulumi:"name"`
	NetworkId          pulumi.StringOutput                        `pulumi:"networkId"`
	PoolerConfig       MdbGreenplumClusterPoolerConfigPtrOutput   `pulumi:"poolerConfig"`
	SecurityGroupIds   pulumi.StringArrayOutput                   `pulumi:"securityGroupIds"`
	SegmentHostCount   pulumi.IntOutput                           `pulumi:"segmentHostCount"`
	SegmentHosts       MdbGreenplumClusterSegmentHostArrayOutput  `pulumi:"segmentHosts"`
	SegmentInHost      pulumi.IntOutput                           `pulumi:"segmentInHost"`
	SegmentSubcluster  MdbGreenplumClusterSegmentSubclusterOutput `pulumi:"segmentSubcluster"`
	Status             pulumi.StringOutput                        `pulumi:"status"`
	SubnetId           pulumi.StringOutput                        `pulumi:"subnetId"`
	UserName           pulumi.StringOutput                        `pulumi:"userName"`
	UserPassword       pulumi.StringOutput                        `pulumi:"userPassword"`
	Version            pulumi.StringOutput                        `pulumi:"version"`
	Zone               pulumi.StringOutput                        `pulumi:"zone"`
}

// NewMdbGreenplumCluster registers a new resource with the given unique name, arguments, and options.
func NewMdbGreenplumCluster(ctx *pulumi.Context,
	name string, args *MdbGreenplumClusterArgs, opts ...pulumi.ResourceOption) (*MdbGreenplumCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AssignPublicIp == nil {
		return nil, errors.New("invalid value for required argument 'AssignPublicIp'")
	}
	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.MasterHostCount == nil {
		return nil, errors.New("invalid value for required argument 'MasterHostCount'")
	}
	if args.MasterSubcluster == nil {
		return nil, errors.New("invalid value for required argument 'MasterSubcluster'")
	}
	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.SegmentHostCount == nil {
		return nil, errors.New("invalid value for required argument 'SegmentHostCount'")
	}
	if args.SegmentInHost == nil {
		return nil, errors.New("invalid value for required argument 'SegmentInHost'")
	}
	if args.SegmentSubcluster == nil {
		return nil, errors.New("invalid value for required argument 'SegmentSubcluster'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.UserName == nil {
		return nil, errors.New("invalid value for required argument 'UserName'")
	}
	if args.UserPassword == nil {
		return nil, errors.New("invalid value for required argument 'UserPassword'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	var resource MdbGreenplumCluster
	err := ctx.RegisterResource("yandex:index/mdbGreenplumCluster:MdbGreenplumCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMdbGreenplumCluster gets an existing MdbGreenplumCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMdbGreenplumCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MdbGreenplumClusterState, opts ...pulumi.ResourceOption) (*MdbGreenplumCluster, error) {
	var resource MdbGreenplumCluster
	err := ctx.ReadResource("yandex:index/mdbGreenplumCluster:MdbGreenplumCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MdbGreenplumCluster resources.
type mdbGreenplumClusterState struct {
	Access             *MdbGreenplumClusterAccess            `pulumi:"access"`
	AssignPublicIp     *bool                                 `pulumi:"assignPublicIp"`
	BackupWindowStart  *MdbGreenplumClusterBackupWindowStart `pulumi:"backupWindowStart"`
	CreatedAt          *string                               `pulumi:"createdAt"`
	DeletionProtection *bool                                 `pulumi:"deletionProtection"`
	Description        *string                               `pulumi:"description"`
	Environment        *string                               `pulumi:"environment"`
	FolderId           *string                               `pulumi:"folderId"`
	GreenplumConfig    map[string]string                     `pulumi:"greenplumConfig"`
	Health             *string                               `pulumi:"health"`
	Labels             map[string]string                     `pulumi:"labels"`
	MaintenanceWindow  *MdbGreenplumClusterMaintenanceWindow `pulumi:"maintenanceWindow"`
	MasterHostCount    *int                                  `pulumi:"masterHostCount"`
	MasterHosts        []MdbGreenplumClusterMasterHost       `pulumi:"masterHosts"`
	MasterSubcluster   *MdbGreenplumClusterMasterSubcluster  `pulumi:"masterSubcluster"`
	Name               *string                               `pulumi:"name"`
	NetworkId          *string                               `pulumi:"networkId"`
	PoolerConfig       *MdbGreenplumClusterPoolerConfig      `pulumi:"poolerConfig"`
	SecurityGroupIds   []string                              `pulumi:"securityGroupIds"`
	SegmentHostCount   *int                                  `pulumi:"segmentHostCount"`
	SegmentHosts       []MdbGreenplumClusterSegmentHost      `pulumi:"segmentHosts"`
	SegmentInHost      *int                                  `pulumi:"segmentInHost"`
	SegmentSubcluster  *MdbGreenplumClusterSegmentSubcluster `pulumi:"segmentSubcluster"`
	Status             *string                               `pulumi:"status"`
	SubnetId           *string                               `pulumi:"subnetId"`
	UserName           *string                               `pulumi:"userName"`
	UserPassword       *string                               `pulumi:"userPassword"`
	Version            *string                               `pulumi:"version"`
	Zone               *string                               `pulumi:"zone"`
}

type MdbGreenplumClusterState struct {
	Access             MdbGreenplumClusterAccessPtrInput
	AssignPublicIp     pulumi.BoolPtrInput
	BackupWindowStart  MdbGreenplumClusterBackupWindowStartPtrInput
	CreatedAt          pulumi.StringPtrInput
	DeletionProtection pulumi.BoolPtrInput
	Description        pulumi.StringPtrInput
	Environment        pulumi.StringPtrInput
	FolderId           pulumi.StringPtrInput
	GreenplumConfig    pulumi.StringMapInput
	Health             pulumi.StringPtrInput
	Labels             pulumi.StringMapInput
	MaintenanceWindow  MdbGreenplumClusterMaintenanceWindowPtrInput
	MasterHostCount    pulumi.IntPtrInput
	MasterHosts        MdbGreenplumClusterMasterHostArrayInput
	MasterSubcluster   MdbGreenplumClusterMasterSubclusterPtrInput
	Name               pulumi.StringPtrInput
	NetworkId          pulumi.StringPtrInput
	PoolerConfig       MdbGreenplumClusterPoolerConfigPtrInput
	SecurityGroupIds   pulumi.StringArrayInput
	SegmentHostCount   pulumi.IntPtrInput
	SegmentHosts       MdbGreenplumClusterSegmentHostArrayInput
	SegmentInHost      pulumi.IntPtrInput
	SegmentSubcluster  MdbGreenplumClusterSegmentSubclusterPtrInput
	Status             pulumi.StringPtrInput
	SubnetId           pulumi.StringPtrInput
	UserName           pulumi.StringPtrInput
	UserPassword       pulumi.StringPtrInput
	Version            pulumi.StringPtrInput
	Zone               pulumi.StringPtrInput
}

func (MdbGreenplumClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*mdbGreenplumClusterState)(nil)).Elem()
}

type mdbGreenplumClusterArgs struct {
	Access             *MdbGreenplumClusterAccess            `pulumi:"access"`
	AssignPublicIp     bool                                  `pulumi:"assignPublicIp"`
	BackupWindowStart  *MdbGreenplumClusterBackupWindowStart `pulumi:"backupWindowStart"`
	DeletionProtection *bool                                 `pulumi:"deletionProtection"`
	Description        *string                               `pulumi:"description"`
	Environment        string                                `pulumi:"environment"`
	FolderId           *string                               `pulumi:"folderId"`
	GreenplumConfig    map[string]string                     `pulumi:"greenplumConfig"`
	Labels             map[string]string                     `pulumi:"labels"`
	MaintenanceWindow  *MdbGreenplumClusterMaintenanceWindow `pulumi:"maintenanceWindow"`
	MasterHostCount    int                                   `pulumi:"masterHostCount"`
	MasterSubcluster   MdbGreenplumClusterMasterSubcluster   `pulumi:"masterSubcluster"`
	Name               *string                               `pulumi:"name"`
	NetworkId          string                                `pulumi:"networkId"`
	PoolerConfig       *MdbGreenplumClusterPoolerConfig      `pulumi:"poolerConfig"`
	SecurityGroupIds   []string                              `pulumi:"securityGroupIds"`
	SegmentHostCount   int                                   `pulumi:"segmentHostCount"`
	SegmentInHost      int                                   `pulumi:"segmentInHost"`
	SegmentSubcluster  MdbGreenplumClusterSegmentSubcluster  `pulumi:"segmentSubcluster"`
	SubnetId           string                                `pulumi:"subnetId"`
	UserName           string                                `pulumi:"userName"`
	UserPassword       string                                `pulumi:"userPassword"`
	Version            string                                `pulumi:"version"`
	Zone               string                                `pulumi:"zone"`
}

// The set of arguments for constructing a MdbGreenplumCluster resource.
type MdbGreenplumClusterArgs struct {
	Access             MdbGreenplumClusterAccessPtrInput
	AssignPublicIp     pulumi.BoolInput
	BackupWindowStart  MdbGreenplumClusterBackupWindowStartPtrInput
	DeletionProtection pulumi.BoolPtrInput
	Description        pulumi.StringPtrInput
	Environment        pulumi.StringInput
	FolderId           pulumi.StringPtrInput
	GreenplumConfig    pulumi.StringMapInput
	Labels             pulumi.StringMapInput
	MaintenanceWindow  MdbGreenplumClusterMaintenanceWindowPtrInput
	MasterHostCount    pulumi.IntInput
	MasterSubcluster   MdbGreenplumClusterMasterSubclusterInput
	Name               pulumi.StringPtrInput
	NetworkId          pulumi.StringInput
	PoolerConfig       MdbGreenplumClusterPoolerConfigPtrInput
	SecurityGroupIds   pulumi.StringArrayInput
	SegmentHostCount   pulumi.IntInput
	SegmentInHost      pulumi.IntInput
	SegmentSubcluster  MdbGreenplumClusterSegmentSubclusterInput
	SubnetId           pulumi.StringInput
	UserName           pulumi.StringInput
	UserPassword       pulumi.StringInput
	Version            pulumi.StringInput
	Zone               pulumi.StringInput
}

func (MdbGreenplumClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mdbGreenplumClusterArgs)(nil)).Elem()
}

type MdbGreenplumClusterInput interface {
	pulumi.Input

	ToMdbGreenplumClusterOutput() MdbGreenplumClusterOutput
	ToMdbGreenplumClusterOutputWithContext(ctx context.Context) MdbGreenplumClusterOutput
}

func (*MdbGreenplumCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbGreenplumCluster)(nil)).Elem()
}

func (i *MdbGreenplumCluster) ToMdbGreenplumClusterOutput() MdbGreenplumClusterOutput {
	return i.ToMdbGreenplumClusterOutputWithContext(context.Background())
}

func (i *MdbGreenplumCluster) ToMdbGreenplumClusterOutputWithContext(ctx context.Context) MdbGreenplumClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbGreenplumClusterOutput)
}

// MdbGreenplumClusterArrayInput is an input type that accepts MdbGreenplumClusterArray and MdbGreenplumClusterArrayOutput values.
// You can construct a concrete instance of `MdbGreenplumClusterArrayInput` via:
//
//	MdbGreenplumClusterArray{ MdbGreenplumClusterArgs{...} }
type MdbGreenplumClusterArrayInput interface {
	pulumi.Input

	ToMdbGreenplumClusterArrayOutput() MdbGreenplumClusterArrayOutput
	ToMdbGreenplumClusterArrayOutputWithContext(context.Context) MdbGreenplumClusterArrayOutput
}

type MdbGreenplumClusterArray []MdbGreenplumClusterInput

func (MdbGreenplumClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MdbGreenplumCluster)(nil)).Elem()
}

func (i MdbGreenplumClusterArray) ToMdbGreenplumClusterArrayOutput() MdbGreenplumClusterArrayOutput {
	return i.ToMdbGreenplumClusterArrayOutputWithContext(context.Background())
}

func (i MdbGreenplumClusterArray) ToMdbGreenplumClusterArrayOutputWithContext(ctx context.Context) MdbGreenplumClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbGreenplumClusterArrayOutput)
}

// MdbGreenplumClusterMapInput is an input type that accepts MdbGreenplumClusterMap and MdbGreenplumClusterMapOutput values.
// You can construct a concrete instance of `MdbGreenplumClusterMapInput` via:
//
//	MdbGreenplumClusterMap{ "key": MdbGreenplumClusterArgs{...} }
type MdbGreenplumClusterMapInput interface {
	pulumi.Input

	ToMdbGreenplumClusterMapOutput() MdbGreenplumClusterMapOutput
	ToMdbGreenplumClusterMapOutputWithContext(context.Context) MdbGreenplumClusterMapOutput
}

type MdbGreenplumClusterMap map[string]MdbGreenplumClusterInput

func (MdbGreenplumClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MdbGreenplumCluster)(nil)).Elem()
}

func (i MdbGreenplumClusterMap) ToMdbGreenplumClusterMapOutput() MdbGreenplumClusterMapOutput {
	return i.ToMdbGreenplumClusterMapOutputWithContext(context.Background())
}

func (i MdbGreenplumClusterMap) ToMdbGreenplumClusterMapOutputWithContext(ctx context.Context) MdbGreenplumClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbGreenplumClusterMapOutput)
}

type MdbGreenplumClusterOutput struct{ *pulumi.OutputState }

func (MdbGreenplumClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbGreenplumCluster)(nil)).Elem()
}

func (o MdbGreenplumClusterOutput) ToMdbGreenplumClusterOutput() MdbGreenplumClusterOutput {
	return o
}

func (o MdbGreenplumClusterOutput) ToMdbGreenplumClusterOutputWithContext(ctx context.Context) MdbGreenplumClusterOutput {
	return o
}

func (o MdbGreenplumClusterOutput) Access() MdbGreenplumClusterAccessOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) MdbGreenplumClusterAccessOutput { return v.Access }).(MdbGreenplumClusterAccessOutput)
}

func (o MdbGreenplumClusterOutput) AssignPublicIp() pulumi.BoolOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) pulumi.BoolOutput { return v.AssignPublicIp }).(pulumi.BoolOutput)
}

func (o MdbGreenplumClusterOutput) BackupWindowStart() MdbGreenplumClusterBackupWindowStartOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) MdbGreenplumClusterBackupWindowStartOutput { return v.BackupWindowStart }).(MdbGreenplumClusterBackupWindowStartOutput)
}

func (o MdbGreenplumClusterOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o MdbGreenplumClusterOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) pulumi.BoolOutput { return v.DeletionProtection }).(pulumi.BoolOutput)
}

func (o MdbGreenplumClusterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o MdbGreenplumClusterOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) pulumi.StringOutput { return v.Environment }).(pulumi.StringOutput)
}

func (o MdbGreenplumClusterOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

func (o MdbGreenplumClusterOutput) GreenplumConfig() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) pulumi.StringMapOutput { return v.GreenplumConfig }).(pulumi.StringMapOutput)
}

func (o MdbGreenplumClusterOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) pulumi.StringOutput { return v.Health }).(pulumi.StringOutput)
}

func (o MdbGreenplumClusterOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o MdbGreenplumClusterOutput) MaintenanceWindow() MdbGreenplumClusterMaintenanceWindowOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) MdbGreenplumClusterMaintenanceWindowOutput { return v.MaintenanceWindow }).(MdbGreenplumClusterMaintenanceWindowOutput)
}

func (o MdbGreenplumClusterOutput) MasterHostCount() pulumi.IntOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) pulumi.IntOutput { return v.MasterHostCount }).(pulumi.IntOutput)
}

func (o MdbGreenplumClusterOutput) MasterHosts() MdbGreenplumClusterMasterHostArrayOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) MdbGreenplumClusterMasterHostArrayOutput { return v.MasterHosts }).(MdbGreenplumClusterMasterHostArrayOutput)
}

func (o MdbGreenplumClusterOutput) MasterSubcluster() MdbGreenplumClusterMasterSubclusterOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) MdbGreenplumClusterMasterSubclusterOutput { return v.MasterSubcluster }).(MdbGreenplumClusterMasterSubclusterOutput)
}

func (o MdbGreenplumClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o MdbGreenplumClusterOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

func (o MdbGreenplumClusterOutput) PoolerConfig() MdbGreenplumClusterPoolerConfigPtrOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) MdbGreenplumClusterPoolerConfigPtrOutput { return v.PoolerConfig }).(MdbGreenplumClusterPoolerConfigPtrOutput)
}

func (o MdbGreenplumClusterOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o MdbGreenplumClusterOutput) SegmentHostCount() pulumi.IntOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) pulumi.IntOutput { return v.SegmentHostCount }).(pulumi.IntOutput)
}

func (o MdbGreenplumClusterOutput) SegmentHosts() MdbGreenplumClusterSegmentHostArrayOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) MdbGreenplumClusterSegmentHostArrayOutput { return v.SegmentHosts }).(MdbGreenplumClusterSegmentHostArrayOutput)
}

func (o MdbGreenplumClusterOutput) SegmentInHost() pulumi.IntOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) pulumi.IntOutput { return v.SegmentInHost }).(pulumi.IntOutput)
}

func (o MdbGreenplumClusterOutput) SegmentSubcluster() MdbGreenplumClusterSegmentSubclusterOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) MdbGreenplumClusterSegmentSubclusterOutput { return v.SegmentSubcluster }).(MdbGreenplumClusterSegmentSubclusterOutput)
}

func (o MdbGreenplumClusterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o MdbGreenplumClusterOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

func (o MdbGreenplumClusterOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) pulumi.StringOutput { return v.UserName }).(pulumi.StringOutput)
}

func (o MdbGreenplumClusterOutput) UserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) pulumi.StringOutput { return v.UserPassword }).(pulumi.StringOutput)
}

func (o MdbGreenplumClusterOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

func (o MdbGreenplumClusterOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbGreenplumCluster) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type MdbGreenplumClusterArrayOutput struct{ *pulumi.OutputState }

func (MdbGreenplumClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MdbGreenplumCluster)(nil)).Elem()
}

func (o MdbGreenplumClusterArrayOutput) ToMdbGreenplumClusterArrayOutput() MdbGreenplumClusterArrayOutput {
	return o
}

func (o MdbGreenplumClusterArrayOutput) ToMdbGreenplumClusterArrayOutputWithContext(ctx context.Context) MdbGreenplumClusterArrayOutput {
	return o
}

func (o MdbGreenplumClusterArrayOutput) Index(i pulumi.IntInput) MdbGreenplumClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MdbGreenplumCluster {
		return vs[0].([]*MdbGreenplumCluster)[vs[1].(int)]
	}).(MdbGreenplumClusterOutput)
}

type MdbGreenplumClusterMapOutput struct{ *pulumi.OutputState }

func (MdbGreenplumClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MdbGreenplumCluster)(nil)).Elem()
}

func (o MdbGreenplumClusterMapOutput) ToMdbGreenplumClusterMapOutput() MdbGreenplumClusterMapOutput {
	return o
}

func (o MdbGreenplumClusterMapOutput) ToMdbGreenplumClusterMapOutputWithContext(ctx context.Context) MdbGreenplumClusterMapOutput {
	return o
}

func (o MdbGreenplumClusterMapOutput) MapIndex(k pulumi.StringInput) MdbGreenplumClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MdbGreenplumCluster {
		return vs[0].(map[string]*MdbGreenplumCluster)[vs[1].(string)]
	}).(MdbGreenplumClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MdbGreenplumClusterInput)(nil)).Elem(), &MdbGreenplumCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*MdbGreenplumClusterArrayInput)(nil)).Elem(), MdbGreenplumClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MdbGreenplumClusterMapInput)(nil)).Elem(), MdbGreenplumClusterMap{})
	pulumi.RegisterOutputType(MdbGreenplumClusterOutput{})
	pulumi.RegisterOutputType(MdbGreenplumClusterArrayOutput{})
	pulumi.RegisterOutputType(MdbGreenplumClusterMapOutput{})
}
