// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IamServiceAccountKey struct {
	pulumi.CustomResourceState

	CreatedAt           pulumi.StringOutput    `pulumi:"createdAt"`
	Description         pulumi.StringPtrOutput `pulumi:"description"`
	EncryptedPrivateKey pulumi.StringOutput    `pulumi:"encryptedPrivateKey"`
	Format              pulumi.StringPtrOutput `pulumi:"format"`
	KeyAlgorithm        pulumi.StringPtrOutput `pulumi:"keyAlgorithm"`
	KeyFingerprint      pulumi.StringOutput    `pulumi:"keyFingerprint"`
	PgpKey              pulumi.StringPtrOutput `pulumi:"pgpKey"`
	PrivateKey          pulumi.StringOutput    `pulumi:"privateKey"`
	PublicKey           pulumi.StringOutput    `pulumi:"publicKey"`
	ServiceAccountId    pulumi.StringOutput    `pulumi:"serviceAccountId"`
}

// NewIamServiceAccountKey registers a new resource with the given unique name, arguments, and options.
func NewIamServiceAccountKey(ctx *pulumi.Context,
	name string, args *IamServiceAccountKeyArgs, opts ...pulumi.ResourceOption) (*IamServiceAccountKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServiceAccountId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccountId'")
	}
	var resource IamServiceAccountKey
	err := ctx.RegisterResource("yandex:index/iamServiceAccountKey:IamServiceAccountKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIamServiceAccountKey gets an existing IamServiceAccountKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIamServiceAccountKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IamServiceAccountKeyState, opts ...pulumi.ResourceOption) (*IamServiceAccountKey, error) {
	var resource IamServiceAccountKey
	err := ctx.ReadResource("yandex:index/iamServiceAccountKey:IamServiceAccountKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IamServiceAccountKey resources.
type iamServiceAccountKeyState struct {
	CreatedAt           *string `pulumi:"createdAt"`
	Description         *string `pulumi:"description"`
	EncryptedPrivateKey *string `pulumi:"encryptedPrivateKey"`
	Format              *string `pulumi:"format"`
	KeyAlgorithm        *string `pulumi:"keyAlgorithm"`
	KeyFingerprint      *string `pulumi:"keyFingerprint"`
	PgpKey              *string `pulumi:"pgpKey"`
	PrivateKey          *string `pulumi:"privateKey"`
	PublicKey           *string `pulumi:"publicKey"`
	ServiceAccountId    *string `pulumi:"serviceAccountId"`
}

type IamServiceAccountKeyState struct {
	CreatedAt           pulumi.StringPtrInput
	Description         pulumi.StringPtrInput
	EncryptedPrivateKey pulumi.StringPtrInput
	Format              pulumi.StringPtrInput
	KeyAlgorithm        pulumi.StringPtrInput
	KeyFingerprint      pulumi.StringPtrInput
	PgpKey              pulumi.StringPtrInput
	PrivateKey          pulumi.StringPtrInput
	PublicKey           pulumi.StringPtrInput
	ServiceAccountId    pulumi.StringPtrInput
}

func (IamServiceAccountKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*iamServiceAccountKeyState)(nil)).Elem()
}

type iamServiceAccountKeyArgs struct {
	Description      *string `pulumi:"description"`
	Format           *string `pulumi:"format"`
	KeyAlgorithm     *string `pulumi:"keyAlgorithm"`
	PgpKey           *string `pulumi:"pgpKey"`
	ServiceAccountId string  `pulumi:"serviceAccountId"`
}

// The set of arguments for constructing a IamServiceAccountKey resource.
type IamServiceAccountKeyArgs struct {
	Description      pulumi.StringPtrInput
	Format           pulumi.StringPtrInput
	KeyAlgorithm     pulumi.StringPtrInput
	PgpKey           pulumi.StringPtrInput
	ServiceAccountId pulumi.StringInput
}

func (IamServiceAccountKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iamServiceAccountKeyArgs)(nil)).Elem()
}

type IamServiceAccountKeyInput interface {
	pulumi.Input

	ToIamServiceAccountKeyOutput() IamServiceAccountKeyOutput
	ToIamServiceAccountKeyOutputWithContext(ctx context.Context) IamServiceAccountKeyOutput
}

func (*IamServiceAccountKey) ElementType() reflect.Type {
	return reflect.TypeOf((**IamServiceAccountKey)(nil)).Elem()
}

func (i *IamServiceAccountKey) ToIamServiceAccountKeyOutput() IamServiceAccountKeyOutput {
	return i.ToIamServiceAccountKeyOutputWithContext(context.Background())
}

func (i *IamServiceAccountKey) ToIamServiceAccountKeyOutputWithContext(ctx context.Context) IamServiceAccountKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamServiceAccountKeyOutput)
}

// IamServiceAccountKeyArrayInput is an input type that accepts IamServiceAccountKeyArray and IamServiceAccountKeyArrayOutput values.
// You can construct a concrete instance of `IamServiceAccountKeyArrayInput` via:
//
//	IamServiceAccountKeyArray{ IamServiceAccountKeyArgs{...} }
type IamServiceAccountKeyArrayInput interface {
	pulumi.Input

	ToIamServiceAccountKeyArrayOutput() IamServiceAccountKeyArrayOutput
	ToIamServiceAccountKeyArrayOutputWithContext(context.Context) IamServiceAccountKeyArrayOutput
}

type IamServiceAccountKeyArray []IamServiceAccountKeyInput

func (IamServiceAccountKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IamServiceAccountKey)(nil)).Elem()
}

func (i IamServiceAccountKeyArray) ToIamServiceAccountKeyArrayOutput() IamServiceAccountKeyArrayOutput {
	return i.ToIamServiceAccountKeyArrayOutputWithContext(context.Background())
}

func (i IamServiceAccountKeyArray) ToIamServiceAccountKeyArrayOutputWithContext(ctx context.Context) IamServiceAccountKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamServiceAccountKeyArrayOutput)
}

// IamServiceAccountKeyMapInput is an input type that accepts IamServiceAccountKeyMap and IamServiceAccountKeyMapOutput values.
// You can construct a concrete instance of `IamServiceAccountKeyMapInput` via:
//
//	IamServiceAccountKeyMap{ "key": IamServiceAccountKeyArgs{...} }
type IamServiceAccountKeyMapInput interface {
	pulumi.Input

	ToIamServiceAccountKeyMapOutput() IamServiceAccountKeyMapOutput
	ToIamServiceAccountKeyMapOutputWithContext(context.Context) IamServiceAccountKeyMapOutput
}

type IamServiceAccountKeyMap map[string]IamServiceAccountKeyInput

func (IamServiceAccountKeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IamServiceAccountKey)(nil)).Elem()
}

func (i IamServiceAccountKeyMap) ToIamServiceAccountKeyMapOutput() IamServiceAccountKeyMapOutput {
	return i.ToIamServiceAccountKeyMapOutputWithContext(context.Background())
}

func (i IamServiceAccountKeyMap) ToIamServiceAccountKeyMapOutputWithContext(ctx context.Context) IamServiceAccountKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamServiceAccountKeyMapOutput)
}

type IamServiceAccountKeyOutput struct{ *pulumi.OutputState }

func (IamServiceAccountKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamServiceAccountKey)(nil)).Elem()
}

func (o IamServiceAccountKeyOutput) ToIamServiceAccountKeyOutput() IamServiceAccountKeyOutput {
	return o
}

func (o IamServiceAccountKeyOutput) ToIamServiceAccountKeyOutputWithContext(ctx context.Context) IamServiceAccountKeyOutput {
	return o
}

func (o IamServiceAccountKeyOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *IamServiceAccountKey) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o IamServiceAccountKeyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamServiceAccountKey) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IamServiceAccountKeyOutput) EncryptedPrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v *IamServiceAccountKey) pulumi.StringOutput { return v.EncryptedPrivateKey }).(pulumi.StringOutput)
}

func (o IamServiceAccountKeyOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamServiceAccountKey) pulumi.StringPtrOutput { return v.Format }).(pulumi.StringPtrOutput)
}

func (o IamServiceAccountKeyOutput) KeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamServiceAccountKey) pulumi.StringPtrOutput { return v.KeyAlgorithm }).(pulumi.StringPtrOutput)
}

func (o IamServiceAccountKeyOutput) KeyFingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *IamServiceAccountKey) pulumi.StringOutput { return v.KeyFingerprint }).(pulumi.StringOutput)
}

func (o IamServiceAccountKeyOutput) PgpKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamServiceAccountKey) pulumi.StringPtrOutput { return v.PgpKey }).(pulumi.StringPtrOutput)
}

func (o IamServiceAccountKeyOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v *IamServiceAccountKey) pulumi.StringOutput { return v.PrivateKey }).(pulumi.StringOutput)
}

func (o IamServiceAccountKeyOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v *IamServiceAccountKey) pulumi.StringOutput { return v.PublicKey }).(pulumi.StringOutput)
}

func (o IamServiceAccountKeyOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *IamServiceAccountKey) pulumi.StringOutput { return v.ServiceAccountId }).(pulumi.StringOutput)
}

type IamServiceAccountKeyArrayOutput struct{ *pulumi.OutputState }

func (IamServiceAccountKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IamServiceAccountKey)(nil)).Elem()
}

func (o IamServiceAccountKeyArrayOutput) ToIamServiceAccountKeyArrayOutput() IamServiceAccountKeyArrayOutput {
	return o
}

func (o IamServiceAccountKeyArrayOutput) ToIamServiceAccountKeyArrayOutputWithContext(ctx context.Context) IamServiceAccountKeyArrayOutput {
	return o
}

func (o IamServiceAccountKeyArrayOutput) Index(i pulumi.IntInput) IamServiceAccountKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IamServiceAccountKey {
		return vs[0].([]*IamServiceAccountKey)[vs[1].(int)]
	}).(IamServiceAccountKeyOutput)
}

type IamServiceAccountKeyMapOutput struct{ *pulumi.OutputState }

func (IamServiceAccountKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IamServiceAccountKey)(nil)).Elem()
}

func (o IamServiceAccountKeyMapOutput) ToIamServiceAccountKeyMapOutput() IamServiceAccountKeyMapOutput {
	return o
}

func (o IamServiceAccountKeyMapOutput) ToIamServiceAccountKeyMapOutputWithContext(ctx context.Context) IamServiceAccountKeyMapOutput {
	return o
}

func (o IamServiceAccountKeyMapOutput) MapIndex(k pulumi.StringInput) IamServiceAccountKeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IamServiceAccountKey {
		return vs[0].(map[string]*IamServiceAccountKey)[vs[1].(string)]
	}).(IamServiceAccountKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IamServiceAccountKeyInput)(nil)).Elem(), &IamServiceAccountKey{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamServiceAccountKeyArrayInput)(nil)).Elem(), IamServiceAccountKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamServiceAccountKeyMapInput)(nil)).Elem(), IamServiceAccountKeyMap{})
	pulumi.RegisterOutputType(IamServiceAccountKeyOutput{})
	pulumi.RegisterOutputType(IamServiceAccountKeyArrayOutput{})
	pulumi.RegisterOutputType(IamServiceAccountKeyMapOutput{})
}
