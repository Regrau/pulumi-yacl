// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VpcAddress struct {
	pulumi.CustomResourceState

	CreatedAt           pulumi.StringOutput                    `pulumi:"createdAt"`
	Description         pulumi.StringPtrOutput                 `pulumi:"description"`
	ExternalIpv4Address VpcAddressExternalIpv4AddressPtrOutput `pulumi:"externalIpv4Address"`
	FolderId            pulumi.StringOutput                    `pulumi:"folderId"`
	Labels              pulumi.StringMapOutput                 `pulumi:"labels"`
	Name                pulumi.StringOutput                    `pulumi:"name"`
	Reserved            pulumi.BoolOutput                      `pulumi:"reserved"`
	Used                pulumi.BoolOutput                      `pulumi:"used"`
}

// NewVpcAddress registers a new resource with the given unique name, arguments, and options.
func NewVpcAddress(ctx *pulumi.Context,
	name string, args *VpcAddressArgs, opts ...pulumi.ResourceOption) (*VpcAddress, error) {
	if args == nil {
		args = &VpcAddressArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource VpcAddress
	err := ctx.RegisterResource("yandex:index/vpcAddress:VpcAddress", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcAddress gets an existing VpcAddress resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcAddress(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcAddressState, opts ...pulumi.ResourceOption) (*VpcAddress, error) {
	var resource VpcAddress
	err := ctx.ReadResource("yandex:index/vpcAddress:VpcAddress", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcAddress resources.
type vpcAddressState struct {
	CreatedAt           *string                        `pulumi:"createdAt"`
	Description         *string                        `pulumi:"description"`
	ExternalIpv4Address *VpcAddressExternalIpv4Address `pulumi:"externalIpv4Address"`
	FolderId            *string                        `pulumi:"folderId"`
	Labels              map[string]string              `pulumi:"labels"`
	Name                *string                        `pulumi:"name"`
	Reserved            *bool                          `pulumi:"reserved"`
	Used                *bool                          `pulumi:"used"`
}

type VpcAddressState struct {
	CreatedAt           pulumi.StringPtrInput
	Description         pulumi.StringPtrInput
	ExternalIpv4Address VpcAddressExternalIpv4AddressPtrInput
	FolderId            pulumi.StringPtrInput
	Labels              pulumi.StringMapInput
	Name                pulumi.StringPtrInput
	Reserved            pulumi.BoolPtrInput
	Used                pulumi.BoolPtrInput
}

func (VpcAddressState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcAddressState)(nil)).Elem()
}

type vpcAddressArgs struct {
	Description         *string                        `pulumi:"description"`
	ExternalIpv4Address *VpcAddressExternalIpv4Address `pulumi:"externalIpv4Address"`
	FolderId            *string                        `pulumi:"folderId"`
	Labels              map[string]string              `pulumi:"labels"`
	Name                *string                        `pulumi:"name"`
}

// The set of arguments for constructing a VpcAddress resource.
type VpcAddressArgs struct {
	Description         pulumi.StringPtrInput
	ExternalIpv4Address VpcAddressExternalIpv4AddressPtrInput
	FolderId            pulumi.StringPtrInput
	Labels              pulumi.StringMapInput
	Name                pulumi.StringPtrInput
}

func (VpcAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcAddressArgs)(nil)).Elem()
}

type VpcAddressInput interface {
	pulumi.Input

	ToVpcAddressOutput() VpcAddressOutput
	ToVpcAddressOutputWithContext(ctx context.Context) VpcAddressOutput
}

func (*VpcAddress) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcAddress)(nil)).Elem()
}

func (i *VpcAddress) ToVpcAddressOutput() VpcAddressOutput {
	return i.ToVpcAddressOutputWithContext(context.Background())
}

func (i *VpcAddress) ToVpcAddressOutputWithContext(ctx context.Context) VpcAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAddressOutput)
}

// VpcAddressArrayInput is an input type that accepts VpcAddressArray and VpcAddressArrayOutput values.
// You can construct a concrete instance of `VpcAddressArrayInput` via:
//
//	VpcAddressArray{ VpcAddressArgs{...} }
type VpcAddressArrayInput interface {
	pulumi.Input

	ToVpcAddressArrayOutput() VpcAddressArrayOutput
	ToVpcAddressArrayOutputWithContext(context.Context) VpcAddressArrayOutput
}

type VpcAddressArray []VpcAddressInput

func (VpcAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcAddress)(nil)).Elem()
}

func (i VpcAddressArray) ToVpcAddressArrayOutput() VpcAddressArrayOutput {
	return i.ToVpcAddressArrayOutputWithContext(context.Background())
}

func (i VpcAddressArray) ToVpcAddressArrayOutputWithContext(ctx context.Context) VpcAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAddressArrayOutput)
}

// VpcAddressMapInput is an input type that accepts VpcAddressMap and VpcAddressMapOutput values.
// You can construct a concrete instance of `VpcAddressMapInput` via:
//
//	VpcAddressMap{ "key": VpcAddressArgs{...} }
type VpcAddressMapInput interface {
	pulumi.Input

	ToVpcAddressMapOutput() VpcAddressMapOutput
	ToVpcAddressMapOutputWithContext(context.Context) VpcAddressMapOutput
}

type VpcAddressMap map[string]VpcAddressInput

func (VpcAddressMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcAddress)(nil)).Elem()
}

func (i VpcAddressMap) ToVpcAddressMapOutput() VpcAddressMapOutput {
	return i.ToVpcAddressMapOutputWithContext(context.Background())
}

func (i VpcAddressMap) ToVpcAddressMapOutputWithContext(ctx context.Context) VpcAddressMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAddressMapOutput)
}

type VpcAddressOutput struct{ *pulumi.OutputState }

func (VpcAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcAddress)(nil)).Elem()
}

func (o VpcAddressOutput) ToVpcAddressOutput() VpcAddressOutput {
	return o
}

func (o VpcAddressOutput) ToVpcAddressOutputWithContext(ctx context.Context) VpcAddressOutput {
	return o
}

func (o VpcAddressOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcAddress) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o VpcAddressOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcAddress) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o VpcAddressOutput) ExternalIpv4Address() VpcAddressExternalIpv4AddressPtrOutput {
	return o.ApplyT(func(v *VpcAddress) VpcAddressExternalIpv4AddressPtrOutput { return v.ExternalIpv4Address }).(VpcAddressExternalIpv4AddressPtrOutput)
}

func (o VpcAddressOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcAddress) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

func (o VpcAddressOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VpcAddress) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o VpcAddressOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcAddress) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o VpcAddressOutput) Reserved() pulumi.BoolOutput {
	return o.ApplyT(func(v *VpcAddress) pulumi.BoolOutput { return v.Reserved }).(pulumi.BoolOutput)
}

func (o VpcAddressOutput) Used() pulumi.BoolOutput {
	return o.ApplyT(func(v *VpcAddress) pulumi.BoolOutput { return v.Used }).(pulumi.BoolOutput)
}

type VpcAddressArrayOutput struct{ *pulumi.OutputState }

func (VpcAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcAddress)(nil)).Elem()
}

func (o VpcAddressArrayOutput) ToVpcAddressArrayOutput() VpcAddressArrayOutput {
	return o
}

func (o VpcAddressArrayOutput) ToVpcAddressArrayOutputWithContext(ctx context.Context) VpcAddressArrayOutput {
	return o
}

func (o VpcAddressArrayOutput) Index(i pulumi.IntInput) VpcAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcAddress {
		return vs[0].([]*VpcAddress)[vs[1].(int)]
	}).(VpcAddressOutput)
}

type VpcAddressMapOutput struct{ *pulumi.OutputState }

func (VpcAddressMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcAddress)(nil)).Elem()
}

func (o VpcAddressMapOutput) ToVpcAddressMapOutput() VpcAddressMapOutput {
	return o
}

func (o VpcAddressMapOutput) ToVpcAddressMapOutputWithContext(ctx context.Context) VpcAddressMapOutput {
	return o
}

func (o VpcAddressMapOutput) MapIndex(k pulumi.StringInput) VpcAddressOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcAddress {
		return vs[0].(map[string]*VpcAddress)[vs[1].(string)]
	}).(VpcAddressOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAddressInput)(nil)).Elem(), &VpcAddress{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAddressArrayInput)(nil)).Elem(), VpcAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAddressMapInput)(nil)).Elem(), VpcAddressMap{})
	pulumi.RegisterOutputType(VpcAddressOutput{})
	pulumi.RegisterOutputType(VpcAddressArrayOutput{})
	pulumi.RegisterOutputType(VpcAddressMapOutput{})
}
