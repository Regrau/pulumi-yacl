// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex YDB Topics. For more information, see
// [the official documentation](https://cloud.yandex.ru/docs/ydb/concepts/#ydb).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			databaseName, err := yandex.NewYdbDatabaseServerless(ctx, "databaseName", &yandex.YdbDatabaseServerlessArgs{
//				LocationId: pulumi.String("ru-central1"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = yandex.NewyandexYdbTopic(ctx, "topic", &yandex.yandexYdbTopicArgs{
//				Consumers: YandexYdbTopicConsumerArray{
//					&YandexYdbTopicConsumerArgs{
//						Name:                       pulumi.String("consumer-name"),
//						StartingMessageTimestampMs: pulumi.Int(0),
//						SupportedCodecs: pulumi.StringArray{
//							pulumi.String("raw"),
//							pulumi.String("gzip"),
//						},
//					},
//				},
//				DatabaseEndpoint:  databaseName.YdbFullEndpoint,
//				PartitionsCount:   pulumi.Int(1),
//				RetentionPeriodMs: pulumi.Int(2000000),
//				SupportedCodecs: pulumi.StringArray{
//					pulumi.String("raw"),
//					pulumi.String("gzip"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## Consumer data type description
//
// * `name` - Reader's name. Type: string, required. Default value: "".
// * `supportedCodecs` - Supported data encodings. Types:Types: array[string], optional. Default value: ["gzip", "raw", "zstd"].
// * `startingMessageTimestampMs` - Timestamp in UNIX timestamp format from which the reader will start reading data. Type: integer, optional. Default value: 0.
type YandexYdbTopic struct {
	pulumi.CustomResourceState

	// Topic Readers. Types: array[consumer], optional. Default value: null.
	Consumers YandexYdbTopicConsumerArrayOutput `pulumi:"consumers"`
	// YDB database endpoint. Types: string, required. Default value: "".
	DatabaseEndpoint pulumi.StringOutput    `pulumi:"databaseEndpoint"`
	Description      pulumi.StringPtrOutput `pulumi:"description"`
	// Topic name. Type: string, required. Default value: "".
	Name pulumi.StringOutput `pulumi:"name"`
	// Number of partitions. Types: integer, optional. Default value: 2.
	PartitionsCount pulumi.IntPtrOutput `pulumi:"partitionsCount"`
	// Data retention time. Types: integer, required. Default value: 86400000
	RetentionPeriodMs pulumi.IntPtrOutput `pulumi:"retentionPeriodMs"`
	// Supported data encodings. Types: array[string]. Default value: ["gzip", "raw", "zstd"].
	SupportedCodecs pulumi.StringArrayOutput `pulumi:"supportedCodecs"`
}

// NewYandexYdbTopic registers a new resource with the given unique name, arguments, and options.
func NewYandexYdbTopic(ctx *pulumi.Context,
	name string, args *YandexYdbTopicArgs, opts ...pulumi.ResourceOption) (*YandexYdbTopic, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatabaseEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseEndpoint'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource YandexYdbTopic
	err := ctx.RegisterResource("yandex:index/yandexYdbTopic:yandexYdbTopic", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetYandexYdbTopic gets an existing YandexYdbTopic resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetYandexYdbTopic(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *YandexYdbTopicState, opts ...pulumi.ResourceOption) (*YandexYdbTopic, error) {
	var resource YandexYdbTopic
	err := ctx.ReadResource("yandex:index/yandexYdbTopic:yandexYdbTopic", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering YandexYdbTopic resources.
type yandexYdbTopicState struct {
	// Topic Readers. Types: array[consumer], optional. Default value: null.
	Consumers []YandexYdbTopicConsumer `pulumi:"consumers"`
	// YDB database endpoint. Types: string, required. Default value: "".
	DatabaseEndpoint *string `pulumi:"databaseEndpoint"`
	Description      *string `pulumi:"description"`
	// Topic name. Type: string, required. Default value: "".
	Name *string `pulumi:"name"`
	// Number of partitions. Types: integer, optional. Default value: 2.
	PartitionsCount *int `pulumi:"partitionsCount"`
	// Data retention time. Types: integer, required. Default value: 86400000
	RetentionPeriodMs *int `pulumi:"retentionPeriodMs"`
	// Supported data encodings. Types: array[string]. Default value: ["gzip", "raw", "zstd"].
	SupportedCodecs []string `pulumi:"supportedCodecs"`
}

type YandexYdbTopicState struct {
	// Topic Readers. Types: array[consumer], optional. Default value: null.
	Consumers YandexYdbTopicConsumerArrayInput
	// YDB database endpoint. Types: string, required. Default value: "".
	DatabaseEndpoint pulumi.StringPtrInput
	Description      pulumi.StringPtrInput
	// Topic name. Type: string, required. Default value: "".
	Name pulumi.StringPtrInput
	// Number of partitions. Types: integer, optional. Default value: 2.
	PartitionsCount pulumi.IntPtrInput
	// Data retention time. Types: integer, required. Default value: 86400000
	RetentionPeriodMs pulumi.IntPtrInput
	// Supported data encodings. Types: array[string]. Default value: ["gzip", "raw", "zstd"].
	SupportedCodecs pulumi.StringArrayInput
}

func (YandexYdbTopicState) ElementType() reflect.Type {
	return reflect.TypeOf((*yandexYdbTopicState)(nil)).Elem()
}

type yandexYdbTopicArgs struct {
	// Topic Readers. Types: array[consumer], optional. Default value: null.
	Consumers []YandexYdbTopicConsumer `pulumi:"consumers"`
	// YDB database endpoint. Types: string, required. Default value: "".
	DatabaseEndpoint string  `pulumi:"databaseEndpoint"`
	Description      *string `pulumi:"description"`
	// Topic name. Type: string, required. Default value: "".
	Name *string `pulumi:"name"`
	// Number of partitions. Types: integer, optional. Default value: 2.
	PartitionsCount *int `pulumi:"partitionsCount"`
	// Data retention time. Types: integer, required. Default value: 86400000
	RetentionPeriodMs *int `pulumi:"retentionPeriodMs"`
	// Supported data encodings. Types: array[string]. Default value: ["gzip", "raw", "zstd"].
	SupportedCodecs []string `pulumi:"supportedCodecs"`
}

// The set of arguments for constructing a YandexYdbTopic resource.
type YandexYdbTopicArgs struct {
	// Topic Readers. Types: array[consumer], optional. Default value: null.
	Consumers YandexYdbTopicConsumerArrayInput
	// YDB database endpoint. Types: string, required. Default value: "".
	DatabaseEndpoint pulumi.StringInput
	Description      pulumi.StringPtrInput
	// Topic name. Type: string, required. Default value: "".
	Name pulumi.StringPtrInput
	// Number of partitions. Types: integer, optional. Default value: 2.
	PartitionsCount pulumi.IntPtrInput
	// Data retention time. Types: integer, required. Default value: 86400000
	RetentionPeriodMs pulumi.IntPtrInput
	// Supported data encodings. Types: array[string]. Default value: ["gzip", "raw", "zstd"].
	SupportedCodecs pulumi.StringArrayInput
}

func (YandexYdbTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*yandexYdbTopicArgs)(nil)).Elem()
}

type YandexYdbTopicInput interface {
	pulumi.Input

	ToYandexYdbTopicOutput() YandexYdbTopicOutput
	ToYandexYdbTopicOutputWithContext(ctx context.Context) YandexYdbTopicOutput
}

func (*YandexYdbTopic) ElementType() reflect.Type {
	return reflect.TypeOf((**YandexYdbTopic)(nil)).Elem()
}

func (i *YandexYdbTopic) ToYandexYdbTopicOutput() YandexYdbTopicOutput {
	return i.ToYandexYdbTopicOutputWithContext(context.Background())
}

func (i *YandexYdbTopic) ToYandexYdbTopicOutputWithContext(ctx context.Context) YandexYdbTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YandexYdbTopicOutput)
}

// YandexYdbTopicArrayInput is an input type that accepts YandexYdbTopicArray and YandexYdbTopicArrayOutput values.
// You can construct a concrete instance of `YandexYdbTopicArrayInput` via:
//
//	YandexYdbTopicArray{ YandexYdbTopicArgs{...} }
type YandexYdbTopicArrayInput interface {
	pulumi.Input

	ToYandexYdbTopicArrayOutput() YandexYdbTopicArrayOutput
	ToYandexYdbTopicArrayOutputWithContext(context.Context) YandexYdbTopicArrayOutput
}

type YandexYdbTopicArray []YandexYdbTopicInput

func (YandexYdbTopicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*YandexYdbTopic)(nil)).Elem()
}

func (i YandexYdbTopicArray) ToYandexYdbTopicArrayOutput() YandexYdbTopicArrayOutput {
	return i.ToYandexYdbTopicArrayOutputWithContext(context.Background())
}

func (i YandexYdbTopicArray) ToYandexYdbTopicArrayOutputWithContext(ctx context.Context) YandexYdbTopicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YandexYdbTopicArrayOutput)
}

// YandexYdbTopicMapInput is an input type that accepts YandexYdbTopicMap and YandexYdbTopicMapOutput values.
// You can construct a concrete instance of `YandexYdbTopicMapInput` via:
//
//	YandexYdbTopicMap{ "key": YandexYdbTopicArgs{...} }
type YandexYdbTopicMapInput interface {
	pulumi.Input

	ToYandexYdbTopicMapOutput() YandexYdbTopicMapOutput
	ToYandexYdbTopicMapOutputWithContext(context.Context) YandexYdbTopicMapOutput
}

type YandexYdbTopicMap map[string]YandexYdbTopicInput

func (YandexYdbTopicMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*YandexYdbTopic)(nil)).Elem()
}

func (i YandexYdbTopicMap) ToYandexYdbTopicMapOutput() YandexYdbTopicMapOutput {
	return i.ToYandexYdbTopicMapOutputWithContext(context.Background())
}

func (i YandexYdbTopicMap) ToYandexYdbTopicMapOutputWithContext(ctx context.Context) YandexYdbTopicMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YandexYdbTopicMapOutput)
}

type YandexYdbTopicOutput struct{ *pulumi.OutputState }

func (YandexYdbTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**YandexYdbTopic)(nil)).Elem()
}

func (o YandexYdbTopicOutput) ToYandexYdbTopicOutput() YandexYdbTopicOutput {
	return o
}

func (o YandexYdbTopicOutput) ToYandexYdbTopicOutputWithContext(ctx context.Context) YandexYdbTopicOutput {
	return o
}

// Topic Readers. Types: array[consumer], optional. Default value: null.
func (o YandexYdbTopicOutput) Consumers() YandexYdbTopicConsumerArrayOutput {
	return o.ApplyT(func(v *YandexYdbTopic) YandexYdbTopicConsumerArrayOutput { return v.Consumers }).(YandexYdbTopicConsumerArrayOutput)
}

// YDB database endpoint. Types: string, required. Default value: "".
func (o YandexYdbTopicOutput) DatabaseEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *YandexYdbTopic) pulumi.StringOutput { return v.DatabaseEndpoint }).(pulumi.StringOutput)
}

func (o YandexYdbTopicOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *YandexYdbTopic) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Topic name. Type: string, required. Default value: "".
func (o YandexYdbTopicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *YandexYdbTopic) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Number of partitions. Types: integer, optional. Default value: 2.
func (o YandexYdbTopicOutput) PartitionsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *YandexYdbTopic) pulumi.IntPtrOutput { return v.PartitionsCount }).(pulumi.IntPtrOutput)
}

// Data retention time. Types: integer, required. Default value: 86400000
func (o YandexYdbTopicOutput) RetentionPeriodMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *YandexYdbTopic) pulumi.IntPtrOutput { return v.RetentionPeriodMs }).(pulumi.IntPtrOutput)
}

// Supported data encodings. Types: array[string]. Default value: ["gzip", "raw", "zstd"].
func (o YandexYdbTopicOutput) SupportedCodecs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *YandexYdbTopic) pulumi.StringArrayOutput { return v.SupportedCodecs }).(pulumi.StringArrayOutput)
}

type YandexYdbTopicArrayOutput struct{ *pulumi.OutputState }

func (YandexYdbTopicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*YandexYdbTopic)(nil)).Elem()
}

func (o YandexYdbTopicArrayOutput) ToYandexYdbTopicArrayOutput() YandexYdbTopicArrayOutput {
	return o
}

func (o YandexYdbTopicArrayOutput) ToYandexYdbTopicArrayOutputWithContext(ctx context.Context) YandexYdbTopicArrayOutput {
	return o
}

func (o YandexYdbTopicArrayOutput) Index(i pulumi.IntInput) YandexYdbTopicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *YandexYdbTopic {
		return vs[0].([]*YandexYdbTopic)[vs[1].(int)]
	}).(YandexYdbTopicOutput)
}

type YandexYdbTopicMapOutput struct{ *pulumi.OutputState }

func (YandexYdbTopicMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*YandexYdbTopic)(nil)).Elem()
}

func (o YandexYdbTopicMapOutput) ToYandexYdbTopicMapOutput() YandexYdbTopicMapOutput {
	return o
}

func (o YandexYdbTopicMapOutput) ToYandexYdbTopicMapOutputWithContext(ctx context.Context) YandexYdbTopicMapOutput {
	return o
}

func (o YandexYdbTopicMapOutput) MapIndex(k pulumi.StringInput) YandexYdbTopicOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *YandexYdbTopic {
		return vs[0].(map[string]*YandexYdbTopic)[vs[1].(string)]
	}).(YandexYdbTopicOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*YandexYdbTopicInput)(nil)).Elem(), &YandexYdbTopic{})
	pulumi.RegisterInputType(reflect.TypeOf((*YandexYdbTopicArrayInput)(nil)).Elem(), YandexYdbTopicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*YandexYdbTopicMapInput)(nil)).Elem(), YandexYdbTopicMap{})
	pulumi.RegisterOutputType(YandexYdbTopicOutput{})
	pulumi.RegisterOutputType(YandexYdbTopicArrayOutput{})
	pulumi.RegisterOutputType(YandexYdbTopicMapOutput{})
}
