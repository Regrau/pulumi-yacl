// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServerlessContainer struct {
	pulumi.CustomResourceState

	Concurrency      pulumi.IntPtrOutput            `pulumi:"concurrency"`
	CoreFraction     pulumi.IntOutput               `pulumi:"coreFraction"`
	Cores            pulumi.IntPtrOutput            `pulumi:"cores"`
	CreatedAt        pulumi.StringOutput            `pulumi:"createdAt"`
	Description      pulumi.StringPtrOutput         `pulumi:"description"`
	ExecutionTimeout pulumi.StringOutput            `pulumi:"executionTimeout"`
	FolderId         pulumi.StringOutput            `pulumi:"folderId"`
	Image            ServerlessContainerImageOutput `pulumi:"image"`
	Labels           pulumi.StringMapOutput         `pulumi:"labels"`
	// Container memory in megabytes, should be aligned to 128
	Memory           pulumi.IntOutput                     `pulumi:"memory"`
	Name             pulumi.StringOutput                  `pulumi:"name"`
	RevisionId       pulumi.StringOutput                  `pulumi:"revisionId"`
	Secrets          ServerlessContainerSecretArrayOutput `pulumi:"secrets"`
	ServiceAccountId pulumi.StringPtrOutput               `pulumi:"serviceAccountId"`
	Url              pulumi.StringOutput                  `pulumi:"url"`
}

// NewServerlessContainer registers a new resource with the given unique name, arguments, and options.
func NewServerlessContainer(ctx *pulumi.Context,
	name string, args *ServerlessContainerArgs, opts ...pulumi.ResourceOption) (*ServerlessContainer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Image == nil {
		return nil, errors.New("invalid value for required argument 'Image'")
	}
	if args.Memory == nil {
		return nil, errors.New("invalid value for required argument 'Memory'")
	}
	var resource ServerlessContainer
	err := ctx.RegisterResource("yandex:index/serverlessContainer:ServerlessContainer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServerlessContainer gets an existing ServerlessContainer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServerlessContainer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServerlessContainerState, opts ...pulumi.ResourceOption) (*ServerlessContainer, error) {
	var resource ServerlessContainer
	err := ctx.ReadResource("yandex:index/serverlessContainer:ServerlessContainer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServerlessContainer resources.
type serverlessContainerState struct {
	Concurrency      *int                      `pulumi:"concurrency"`
	CoreFraction     *int                      `pulumi:"coreFraction"`
	Cores            *int                      `pulumi:"cores"`
	CreatedAt        *string                   `pulumi:"createdAt"`
	Description      *string                   `pulumi:"description"`
	ExecutionTimeout *string                   `pulumi:"executionTimeout"`
	FolderId         *string                   `pulumi:"folderId"`
	Image            *ServerlessContainerImage `pulumi:"image"`
	Labels           map[string]string         `pulumi:"labels"`
	// Container memory in megabytes, should be aligned to 128
	Memory           *int                        `pulumi:"memory"`
	Name             *string                     `pulumi:"name"`
	RevisionId       *string                     `pulumi:"revisionId"`
	Secrets          []ServerlessContainerSecret `pulumi:"secrets"`
	ServiceAccountId *string                     `pulumi:"serviceAccountId"`
	Url              *string                     `pulumi:"url"`
}

type ServerlessContainerState struct {
	Concurrency      pulumi.IntPtrInput
	CoreFraction     pulumi.IntPtrInput
	Cores            pulumi.IntPtrInput
	CreatedAt        pulumi.StringPtrInput
	Description      pulumi.StringPtrInput
	ExecutionTimeout pulumi.StringPtrInput
	FolderId         pulumi.StringPtrInput
	Image            ServerlessContainerImagePtrInput
	Labels           pulumi.StringMapInput
	// Container memory in megabytes, should be aligned to 128
	Memory           pulumi.IntPtrInput
	Name             pulumi.StringPtrInput
	RevisionId       pulumi.StringPtrInput
	Secrets          ServerlessContainerSecretArrayInput
	ServiceAccountId pulumi.StringPtrInput
	Url              pulumi.StringPtrInput
}

func (ServerlessContainerState) ElementType() reflect.Type {
	return reflect.TypeOf((*serverlessContainerState)(nil)).Elem()
}

type serverlessContainerArgs struct {
	Concurrency      *int                     `pulumi:"concurrency"`
	CoreFraction     *int                     `pulumi:"coreFraction"`
	Cores            *int                     `pulumi:"cores"`
	Description      *string                  `pulumi:"description"`
	ExecutionTimeout *string                  `pulumi:"executionTimeout"`
	FolderId         *string                  `pulumi:"folderId"`
	Image            ServerlessContainerImage `pulumi:"image"`
	Labels           map[string]string        `pulumi:"labels"`
	// Container memory in megabytes, should be aligned to 128
	Memory           int                         `pulumi:"memory"`
	Name             *string                     `pulumi:"name"`
	Secrets          []ServerlessContainerSecret `pulumi:"secrets"`
	ServiceAccountId *string                     `pulumi:"serviceAccountId"`
}

// The set of arguments for constructing a ServerlessContainer resource.
type ServerlessContainerArgs struct {
	Concurrency      pulumi.IntPtrInput
	CoreFraction     pulumi.IntPtrInput
	Cores            pulumi.IntPtrInput
	Description      pulumi.StringPtrInput
	ExecutionTimeout pulumi.StringPtrInput
	FolderId         pulumi.StringPtrInput
	Image            ServerlessContainerImageInput
	Labels           pulumi.StringMapInput
	// Container memory in megabytes, should be aligned to 128
	Memory           pulumi.IntInput
	Name             pulumi.StringPtrInput
	Secrets          ServerlessContainerSecretArrayInput
	ServiceAccountId pulumi.StringPtrInput
}

func (ServerlessContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serverlessContainerArgs)(nil)).Elem()
}

type ServerlessContainerInput interface {
	pulumi.Input

	ToServerlessContainerOutput() ServerlessContainerOutput
	ToServerlessContainerOutputWithContext(ctx context.Context) ServerlessContainerOutput
}

func (*ServerlessContainer) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessContainer)(nil)).Elem()
}

func (i *ServerlessContainer) ToServerlessContainerOutput() ServerlessContainerOutput {
	return i.ToServerlessContainerOutputWithContext(context.Background())
}

func (i *ServerlessContainer) ToServerlessContainerOutputWithContext(ctx context.Context) ServerlessContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessContainerOutput)
}

// ServerlessContainerArrayInput is an input type that accepts ServerlessContainerArray and ServerlessContainerArrayOutput values.
// You can construct a concrete instance of `ServerlessContainerArrayInput` via:
//
//	ServerlessContainerArray{ ServerlessContainerArgs{...} }
type ServerlessContainerArrayInput interface {
	pulumi.Input

	ToServerlessContainerArrayOutput() ServerlessContainerArrayOutput
	ToServerlessContainerArrayOutputWithContext(context.Context) ServerlessContainerArrayOutput
}

type ServerlessContainerArray []ServerlessContainerInput

func (ServerlessContainerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServerlessContainer)(nil)).Elem()
}

func (i ServerlessContainerArray) ToServerlessContainerArrayOutput() ServerlessContainerArrayOutput {
	return i.ToServerlessContainerArrayOutputWithContext(context.Background())
}

func (i ServerlessContainerArray) ToServerlessContainerArrayOutputWithContext(ctx context.Context) ServerlessContainerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessContainerArrayOutput)
}

// ServerlessContainerMapInput is an input type that accepts ServerlessContainerMap and ServerlessContainerMapOutput values.
// You can construct a concrete instance of `ServerlessContainerMapInput` via:
//
//	ServerlessContainerMap{ "key": ServerlessContainerArgs{...} }
type ServerlessContainerMapInput interface {
	pulumi.Input

	ToServerlessContainerMapOutput() ServerlessContainerMapOutput
	ToServerlessContainerMapOutputWithContext(context.Context) ServerlessContainerMapOutput
}

type ServerlessContainerMap map[string]ServerlessContainerInput

func (ServerlessContainerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServerlessContainer)(nil)).Elem()
}

func (i ServerlessContainerMap) ToServerlessContainerMapOutput() ServerlessContainerMapOutput {
	return i.ToServerlessContainerMapOutputWithContext(context.Background())
}

func (i ServerlessContainerMap) ToServerlessContainerMapOutputWithContext(ctx context.Context) ServerlessContainerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessContainerMapOutput)
}

type ServerlessContainerOutput struct{ *pulumi.OutputState }

func (ServerlessContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessContainer)(nil)).Elem()
}

func (o ServerlessContainerOutput) ToServerlessContainerOutput() ServerlessContainerOutput {
	return o
}

func (o ServerlessContainerOutput) ToServerlessContainerOutputWithContext(ctx context.Context) ServerlessContainerOutput {
	return o
}

func (o ServerlessContainerOutput) Concurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.IntPtrOutput { return v.Concurrency }).(pulumi.IntPtrOutput)
}

func (o ServerlessContainerOutput) CoreFraction() pulumi.IntOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.IntOutput { return v.CoreFraction }).(pulumi.IntOutput)
}

func (o ServerlessContainerOutput) Cores() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.IntPtrOutput { return v.Cores }).(pulumi.IntPtrOutput)
}

func (o ServerlessContainerOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o ServerlessContainerOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ServerlessContainerOutput) ExecutionTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.StringOutput { return v.ExecutionTimeout }).(pulumi.StringOutput)
}

func (o ServerlessContainerOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

func (o ServerlessContainerOutput) Image() ServerlessContainerImageOutput {
	return o.ApplyT(func(v *ServerlessContainer) ServerlessContainerImageOutput { return v.Image }).(ServerlessContainerImageOutput)
}

func (o ServerlessContainerOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Container memory in megabytes, should be aligned to 128
func (o ServerlessContainerOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.IntOutput { return v.Memory }).(pulumi.IntOutput)
}

func (o ServerlessContainerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ServerlessContainerOutput) RevisionId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.StringOutput { return v.RevisionId }).(pulumi.StringOutput)
}

func (o ServerlessContainerOutput) Secrets() ServerlessContainerSecretArrayOutput {
	return o.ApplyT(func(v *ServerlessContainer) ServerlessContainerSecretArrayOutput { return v.Secrets }).(ServerlessContainerSecretArrayOutput)
}

func (o ServerlessContainerOutput) ServiceAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.StringPtrOutput { return v.ServiceAccountId }).(pulumi.StringPtrOutput)
}

func (o ServerlessContainerOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

type ServerlessContainerArrayOutput struct{ *pulumi.OutputState }

func (ServerlessContainerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServerlessContainer)(nil)).Elem()
}

func (o ServerlessContainerArrayOutput) ToServerlessContainerArrayOutput() ServerlessContainerArrayOutput {
	return o
}

func (o ServerlessContainerArrayOutput) ToServerlessContainerArrayOutputWithContext(ctx context.Context) ServerlessContainerArrayOutput {
	return o
}

func (o ServerlessContainerArrayOutput) Index(i pulumi.IntInput) ServerlessContainerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServerlessContainer {
		return vs[0].([]*ServerlessContainer)[vs[1].(int)]
	}).(ServerlessContainerOutput)
}

type ServerlessContainerMapOutput struct{ *pulumi.OutputState }

func (ServerlessContainerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServerlessContainer)(nil)).Elem()
}

func (o ServerlessContainerMapOutput) ToServerlessContainerMapOutput() ServerlessContainerMapOutput {
	return o
}

func (o ServerlessContainerMapOutput) ToServerlessContainerMapOutputWithContext(ctx context.Context) ServerlessContainerMapOutput {
	return o
}

func (o ServerlessContainerMapOutput) MapIndex(k pulumi.StringInput) ServerlessContainerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServerlessContainer {
		return vs[0].(map[string]*ServerlessContainer)[vs[1].(string)]
	}).(ServerlessContainerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessContainerInput)(nil)).Elem(), &ServerlessContainer{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessContainerArrayInput)(nil)).Elem(), ServerlessContainerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessContainerMapInput)(nil)).Elem(), ServerlessContainerMap{})
	pulumi.RegisterOutputType(ServerlessContainerOutput{})
	pulumi.RegisterOutputType(ServerlessContainerArrayOutput{})
	pulumi.RegisterOutputType(ServerlessContainerMapOutput{})
}
