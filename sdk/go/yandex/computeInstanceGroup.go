// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeInstanceGroup struct {
	pulumi.CustomResourceState

	AllocationPolicy          ComputeInstanceGroupAllocationPolicyOutput           `pulumi:"allocationPolicy"`
	ApplicationLoadBalancer   ComputeInstanceGroupApplicationLoadBalancerPtrOutput `pulumi:"applicationLoadBalancer"`
	CreatedAt                 pulumi.StringOutput                                  `pulumi:"createdAt"`
	DeletionProtection        pulumi.BoolPtrOutput                                 `pulumi:"deletionProtection"`
	DeployPolicy              ComputeInstanceGroupDeployPolicyOutput               `pulumi:"deployPolicy"`
	Description               pulumi.StringPtrOutput                               `pulumi:"description"`
	FolderId                  pulumi.StringOutput                                  `pulumi:"folderId"`
	HealthChecks              ComputeInstanceGroupHealthCheckArrayOutput           `pulumi:"healthChecks"`
	InstanceTemplate          ComputeInstanceGroupInstanceTemplateOutput           `pulumi:"instanceTemplate"`
	Instances                 ComputeInstanceGroupInstanceArrayOutput              `pulumi:"instances"`
	Labels                    pulumi.StringMapOutput                               `pulumi:"labels"`
	LoadBalancer              ComputeInstanceGroupLoadBalancerPtrOutput            `pulumi:"loadBalancer"`
	MaxCheckingHealthDuration pulumi.IntPtrOutput                                  `pulumi:"maxCheckingHealthDuration"`
	Name                      pulumi.StringOutput                                  `pulumi:"name"`
	ScalePolicy               ComputeInstanceGroupScalePolicyOutput                `pulumi:"scalePolicy"`
	ServiceAccountId          pulumi.StringOutput                                  `pulumi:"serviceAccountId"`
	Status                    pulumi.StringOutput                                  `pulumi:"status"`
	Variables                 pulumi.StringMapOutput                               `pulumi:"variables"`
}

// NewComputeInstanceGroup registers a new resource with the given unique name, arguments, and options.
func NewComputeInstanceGroup(ctx *pulumi.Context,
	name string, args *ComputeInstanceGroupArgs, opts ...pulumi.ResourceOption) (*ComputeInstanceGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AllocationPolicy == nil {
		return nil, errors.New("invalid value for required argument 'AllocationPolicy'")
	}
	if args.DeployPolicy == nil {
		return nil, errors.New("invalid value for required argument 'DeployPolicy'")
	}
	if args.InstanceTemplate == nil {
		return nil, errors.New("invalid value for required argument 'InstanceTemplate'")
	}
	if args.ScalePolicy == nil {
		return nil, errors.New("invalid value for required argument 'ScalePolicy'")
	}
	if args.ServiceAccountId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccountId'")
	}
	var resource ComputeInstanceGroup
	err := ctx.RegisterResource("yandex:index/computeInstanceGroup:ComputeInstanceGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeInstanceGroup gets an existing ComputeInstanceGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeInstanceGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeInstanceGroupState, opts ...pulumi.ResourceOption) (*ComputeInstanceGroup, error) {
	var resource ComputeInstanceGroup
	err := ctx.ReadResource("yandex:index/computeInstanceGroup:ComputeInstanceGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeInstanceGroup resources.
type computeInstanceGroupState struct {
	AllocationPolicy          *ComputeInstanceGroupAllocationPolicy        `pulumi:"allocationPolicy"`
	ApplicationLoadBalancer   *ComputeInstanceGroupApplicationLoadBalancer `pulumi:"applicationLoadBalancer"`
	CreatedAt                 *string                                      `pulumi:"createdAt"`
	DeletionProtection        *bool                                        `pulumi:"deletionProtection"`
	DeployPolicy              *ComputeInstanceGroupDeployPolicy            `pulumi:"deployPolicy"`
	Description               *string                                      `pulumi:"description"`
	FolderId                  *string                                      `pulumi:"folderId"`
	HealthChecks              []ComputeInstanceGroupHealthCheck            `pulumi:"healthChecks"`
	InstanceTemplate          *ComputeInstanceGroupInstanceTemplate        `pulumi:"instanceTemplate"`
	Instances                 []ComputeInstanceGroupInstance               `pulumi:"instances"`
	Labels                    map[string]string                            `pulumi:"labels"`
	LoadBalancer              *ComputeInstanceGroupLoadBalancer            `pulumi:"loadBalancer"`
	MaxCheckingHealthDuration *int                                         `pulumi:"maxCheckingHealthDuration"`
	Name                      *string                                      `pulumi:"name"`
	ScalePolicy               *ComputeInstanceGroupScalePolicy             `pulumi:"scalePolicy"`
	ServiceAccountId          *string                                      `pulumi:"serviceAccountId"`
	Status                    *string                                      `pulumi:"status"`
	Variables                 map[string]string                            `pulumi:"variables"`
}

type ComputeInstanceGroupState struct {
	AllocationPolicy          ComputeInstanceGroupAllocationPolicyPtrInput
	ApplicationLoadBalancer   ComputeInstanceGroupApplicationLoadBalancerPtrInput
	CreatedAt                 pulumi.StringPtrInput
	DeletionProtection        pulumi.BoolPtrInput
	DeployPolicy              ComputeInstanceGroupDeployPolicyPtrInput
	Description               pulumi.StringPtrInput
	FolderId                  pulumi.StringPtrInput
	HealthChecks              ComputeInstanceGroupHealthCheckArrayInput
	InstanceTemplate          ComputeInstanceGroupInstanceTemplatePtrInput
	Instances                 ComputeInstanceGroupInstanceArrayInput
	Labels                    pulumi.StringMapInput
	LoadBalancer              ComputeInstanceGroupLoadBalancerPtrInput
	MaxCheckingHealthDuration pulumi.IntPtrInput
	Name                      pulumi.StringPtrInput
	ScalePolicy               ComputeInstanceGroupScalePolicyPtrInput
	ServiceAccountId          pulumi.StringPtrInput
	Status                    pulumi.StringPtrInput
	Variables                 pulumi.StringMapInput
}

func (ComputeInstanceGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeInstanceGroupState)(nil)).Elem()
}

type computeInstanceGroupArgs struct {
	AllocationPolicy          ComputeInstanceGroupAllocationPolicy         `pulumi:"allocationPolicy"`
	ApplicationLoadBalancer   *ComputeInstanceGroupApplicationLoadBalancer `pulumi:"applicationLoadBalancer"`
	DeletionProtection        *bool                                        `pulumi:"deletionProtection"`
	DeployPolicy              ComputeInstanceGroupDeployPolicy             `pulumi:"deployPolicy"`
	Description               *string                                      `pulumi:"description"`
	FolderId                  *string                                      `pulumi:"folderId"`
	HealthChecks              []ComputeInstanceGroupHealthCheck            `pulumi:"healthChecks"`
	InstanceTemplate          ComputeInstanceGroupInstanceTemplate         `pulumi:"instanceTemplate"`
	Labels                    map[string]string                            `pulumi:"labels"`
	LoadBalancer              *ComputeInstanceGroupLoadBalancer            `pulumi:"loadBalancer"`
	MaxCheckingHealthDuration *int                                         `pulumi:"maxCheckingHealthDuration"`
	Name                      *string                                      `pulumi:"name"`
	ScalePolicy               ComputeInstanceGroupScalePolicy              `pulumi:"scalePolicy"`
	ServiceAccountId          string                                       `pulumi:"serviceAccountId"`
	Variables                 map[string]string                            `pulumi:"variables"`
}

// The set of arguments for constructing a ComputeInstanceGroup resource.
type ComputeInstanceGroupArgs struct {
	AllocationPolicy          ComputeInstanceGroupAllocationPolicyInput
	ApplicationLoadBalancer   ComputeInstanceGroupApplicationLoadBalancerPtrInput
	DeletionProtection        pulumi.BoolPtrInput
	DeployPolicy              ComputeInstanceGroupDeployPolicyInput
	Description               pulumi.StringPtrInput
	FolderId                  pulumi.StringPtrInput
	HealthChecks              ComputeInstanceGroupHealthCheckArrayInput
	InstanceTemplate          ComputeInstanceGroupInstanceTemplateInput
	Labels                    pulumi.StringMapInput
	LoadBalancer              ComputeInstanceGroupLoadBalancerPtrInput
	MaxCheckingHealthDuration pulumi.IntPtrInput
	Name                      pulumi.StringPtrInput
	ScalePolicy               ComputeInstanceGroupScalePolicyInput
	ServiceAccountId          pulumi.StringInput
	Variables                 pulumi.StringMapInput
}

func (ComputeInstanceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeInstanceGroupArgs)(nil)).Elem()
}

type ComputeInstanceGroupInput interface {
	pulumi.Input

	ToComputeInstanceGroupOutput() ComputeInstanceGroupOutput
	ToComputeInstanceGroupOutputWithContext(ctx context.Context) ComputeInstanceGroupOutput
}

func (*ComputeInstanceGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroup)(nil)).Elem()
}

func (i *ComputeInstanceGroup) ToComputeInstanceGroupOutput() ComputeInstanceGroupOutput {
	return i.ToComputeInstanceGroupOutputWithContext(context.Background())
}

func (i *ComputeInstanceGroup) ToComputeInstanceGroupOutputWithContext(ctx context.Context) ComputeInstanceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupOutput)
}

// ComputeInstanceGroupArrayInput is an input type that accepts ComputeInstanceGroupArray and ComputeInstanceGroupArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupArrayInput` via:
//
//	ComputeInstanceGroupArray{ ComputeInstanceGroupArgs{...} }
type ComputeInstanceGroupArrayInput interface {
	pulumi.Input

	ToComputeInstanceGroupArrayOutput() ComputeInstanceGroupArrayOutput
	ToComputeInstanceGroupArrayOutputWithContext(context.Context) ComputeInstanceGroupArrayOutput
}

type ComputeInstanceGroupArray []ComputeInstanceGroupInput

func (ComputeInstanceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ComputeInstanceGroup)(nil)).Elem()
}

func (i ComputeInstanceGroupArray) ToComputeInstanceGroupArrayOutput() ComputeInstanceGroupArrayOutput {
	return i.ToComputeInstanceGroupArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupArray) ToComputeInstanceGroupArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupArrayOutput)
}

// ComputeInstanceGroupMapInput is an input type that accepts ComputeInstanceGroupMap and ComputeInstanceGroupMapOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupMapInput` via:
//
//	ComputeInstanceGroupMap{ "key": ComputeInstanceGroupArgs{...} }
type ComputeInstanceGroupMapInput interface {
	pulumi.Input

	ToComputeInstanceGroupMapOutput() ComputeInstanceGroupMapOutput
	ToComputeInstanceGroupMapOutputWithContext(context.Context) ComputeInstanceGroupMapOutput
}

type ComputeInstanceGroupMap map[string]ComputeInstanceGroupInput

func (ComputeInstanceGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ComputeInstanceGroup)(nil)).Elem()
}

func (i ComputeInstanceGroupMap) ToComputeInstanceGroupMapOutput() ComputeInstanceGroupMapOutput {
	return i.ToComputeInstanceGroupMapOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupMap) ToComputeInstanceGroupMapOutputWithContext(ctx context.Context) ComputeInstanceGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupMapOutput)
}

type ComputeInstanceGroupOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroup)(nil)).Elem()
}

func (o ComputeInstanceGroupOutput) ToComputeInstanceGroupOutput() ComputeInstanceGroupOutput {
	return o
}

func (o ComputeInstanceGroupOutput) ToComputeInstanceGroupOutputWithContext(ctx context.Context) ComputeInstanceGroupOutput {
	return o
}

func (o ComputeInstanceGroupOutput) AllocationPolicy() ComputeInstanceGroupAllocationPolicyOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) ComputeInstanceGroupAllocationPolicyOutput { return v.AllocationPolicy }).(ComputeInstanceGroupAllocationPolicyOutput)
}

func (o ComputeInstanceGroupOutput) ApplicationLoadBalancer() ComputeInstanceGroupApplicationLoadBalancerPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) ComputeInstanceGroupApplicationLoadBalancerPtrOutput {
		return v.ApplicationLoadBalancer
	}).(ComputeInstanceGroupApplicationLoadBalancerPtrOutput)
}

func (o ComputeInstanceGroupOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o ComputeInstanceGroupOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

func (o ComputeInstanceGroupOutput) DeployPolicy() ComputeInstanceGroupDeployPolicyOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) ComputeInstanceGroupDeployPolicyOutput { return v.DeployPolicy }).(ComputeInstanceGroupDeployPolicyOutput)
}

func (o ComputeInstanceGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ComputeInstanceGroupOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

func (o ComputeInstanceGroupOutput) HealthChecks() ComputeInstanceGroupHealthCheckArrayOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) ComputeInstanceGroupHealthCheckArrayOutput { return v.HealthChecks }).(ComputeInstanceGroupHealthCheckArrayOutput)
}

func (o ComputeInstanceGroupOutput) InstanceTemplate() ComputeInstanceGroupInstanceTemplateOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) ComputeInstanceGroupInstanceTemplateOutput { return v.InstanceTemplate }).(ComputeInstanceGroupInstanceTemplateOutput)
}

func (o ComputeInstanceGroupOutput) Instances() ComputeInstanceGroupInstanceArrayOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) ComputeInstanceGroupInstanceArrayOutput { return v.Instances }).(ComputeInstanceGroupInstanceArrayOutput)
}

func (o ComputeInstanceGroupOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o ComputeInstanceGroupOutput) LoadBalancer() ComputeInstanceGroupLoadBalancerPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) ComputeInstanceGroupLoadBalancerPtrOutput { return v.LoadBalancer }).(ComputeInstanceGroupLoadBalancerPtrOutput)
}

func (o ComputeInstanceGroupOutput) MaxCheckingHealthDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) pulumi.IntPtrOutput { return v.MaxCheckingHealthDuration }).(pulumi.IntPtrOutput)
}

func (o ComputeInstanceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ComputeInstanceGroupOutput) ScalePolicy() ComputeInstanceGroupScalePolicyOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) ComputeInstanceGroupScalePolicyOutput { return v.ScalePolicy }).(ComputeInstanceGroupScalePolicyOutput)
}

func (o ComputeInstanceGroupOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) pulumi.StringOutput { return v.ServiceAccountId }).(pulumi.StringOutput)
}

func (o ComputeInstanceGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o ComputeInstanceGroupOutput) Variables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) pulumi.StringMapOutput { return v.Variables }).(pulumi.StringMapOutput)
}

type ComputeInstanceGroupArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ComputeInstanceGroup)(nil)).Elem()
}

func (o ComputeInstanceGroupArrayOutput) ToComputeInstanceGroupArrayOutput() ComputeInstanceGroupArrayOutput {
	return o
}

func (o ComputeInstanceGroupArrayOutput) ToComputeInstanceGroupArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupArrayOutput {
	return o
}

func (o ComputeInstanceGroupArrayOutput) Index(i pulumi.IntInput) ComputeInstanceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ComputeInstanceGroup {
		return vs[0].([]*ComputeInstanceGroup)[vs[1].(int)]
	}).(ComputeInstanceGroupOutput)
}

type ComputeInstanceGroupMapOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ComputeInstanceGroup)(nil)).Elem()
}

func (o ComputeInstanceGroupMapOutput) ToComputeInstanceGroupMapOutput() ComputeInstanceGroupMapOutput {
	return o
}

func (o ComputeInstanceGroupMapOutput) ToComputeInstanceGroupMapOutputWithContext(ctx context.Context) ComputeInstanceGroupMapOutput {
	return o
}

func (o ComputeInstanceGroupMapOutput) MapIndex(k pulumi.StringInput) ComputeInstanceGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ComputeInstanceGroup {
		return vs[0].(map[string]*ComputeInstanceGroup)[vs[1].(string)]
	}).(ComputeInstanceGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceGroupInput)(nil)).Elem(), &ComputeInstanceGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceGroupArrayInput)(nil)).Elem(), ComputeInstanceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceGroupMapInput)(nil)).Elem(), ComputeInstanceGroupMap{})
	pulumi.RegisterOutputType(ComputeInstanceGroupOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupMapOutput{})
}
