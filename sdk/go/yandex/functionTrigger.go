// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FunctionTrigger struct {
	pulumi.CustomResourceState

	CreatedAt     pulumi.StringOutput                   `pulumi:"createdAt"`
	Description   pulumi.StringPtrOutput                `pulumi:"description"`
	Dlq           FunctionTriggerDlqPtrOutput           `pulumi:"dlq"`
	FolderId      pulumi.StringOutput                   `pulumi:"folderId"`
	Function      FunctionTriggerFunctionOutput         `pulumi:"function"`
	Iot           FunctionTriggerIotPtrOutput           `pulumi:"iot"`
	Labels        pulumi.StringMapOutput                `pulumi:"labels"`
	LogGroup      FunctionTriggerLogGroupPtrOutput      `pulumi:"logGroup"`
	Logging       FunctionTriggerLoggingPtrOutput       `pulumi:"logging"`
	MessageQueue  FunctionTriggerMessageQueuePtrOutput  `pulumi:"messageQueue"`
	Name          pulumi.StringOutput                   `pulumi:"name"`
	ObjectStorage FunctionTriggerObjectStoragePtrOutput `pulumi:"objectStorage"`
	Timer         FunctionTriggerTimerPtrOutput         `pulumi:"timer"`
}

// NewFunctionTrigger registers a new resource with the given unique name, arguments, and options.
func NewFunctionTrigger(ctx *pulumi.Context,
	name string, args *FunctionTriggerArgs, opts ...pulumi.ResourceOption) (*FunctionTrigger, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Function == nil {
		return nil, errors.New("invalid value for required argument 'Function'")
	}
	var resource FunctionTrigger
	err := ctx.RegisterResource("yandex:index/functionTrigger:FunctionTrigger", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFunctionTrigger gets an existing FunctionTrigger resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFunctionTrigger(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FunctionTriggerState, opts ...pulumi.ResourceOption) (*FunctionTrigger, error) {
	var resource FunctionTrigger
	err := ctx.ReadResource("yandex:index/functionTrigger:FunctionTrigger", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FunctionTrigger resources.
type functionTriggerState struct {
	CreatedAt     *string                       `pulumi:"createdAt"`
	Description   *string                       `pulumi:"description"`
	Dlq           *FunctionTriggerDlq           `pulumi:"dlq"`
	FolderId      *string                       `pulumi:"folderId"`
	Function      *FunctionTriggerFunction      `pulumi:"function"`
	Iot           *FunctionTriggerIot           `pulumi:"iot"`
	Labels        map[string]string             `pulumi:"labels"`
	LogGroup      *FunctionTriggerLogGroup      `pulumi:"logGroup"`
	Logging       *FunctionTriggerLogging       `pulumi:"logging"`
	MessageQueue  *FunctionTriggerMessageQueue  `pulumi:"messageQueue"`
	Name          *string                       `pulumi:"name"`
	ObjectStorage *FunctionTriggerObjectStorage `pulumi:"objectStorage"`
	Timer         *FunctionTriggerTimer         `pulumi:"timer"`
}

type FunctionTriggerState struct {
	CreatedAt     pulumi.StringPtrInput
	Description   pulumi.StringPtrInput
	Dlq           FunctionTriggerDlqPtrInput
	FolderId      pulumi.StringPtrInput
	Function      FunctionTriggerFunctionPtrInput
	Iot           FunctionTriggerIotPtrInput
	Labels        pulumi.StringMapInput
	LogGroup      FunctionTriggerLogGroupPtrInput
	Logging       FunctionTriggerLoggingPtrInput
	MessageQueue  FunctionTriggerMessageQueuePtrInput
	Name          pulumi.StringPtrInput
	ObjectStorage FunctionTriggerObjectStoragePtrInput
	Timer         FunctionTriggerTimerPtrInput
}

func (FunctionTriggerState) ElementType() reflect.Type {
	return reflect.TypeOf((*functionTriggerState)(nil)).Elem()
}

type functionTriggerArgs struct {
	Description   *string                       `pulumi:"description"`
	Dlq           *FunctionTriggerDlq           `pulumi:"dlq"`
	FolderId      *string                       `pulumi:"folderId"`
	Function      FunctionTriggerFunction       `pulumi:"function"`
	Iot           *FunctionTriggerIot           `pulumi:"iot"`
	Labels        map[string]string             `pulumi:"labels"`
	LogGroup      *FunctionTriggerLogGroup      `pulumi:"logGroup"`
	Logging       *FunctionTriggerLogging       `pulumi:"logging"`
	MessageQueue  *FunctionTriggerMessageQueue  `pulumi:"messageQueue"`
	Name          *string                       `pulumi:"name"`
	ObjectStorage *FunctionTriggerObjectStorage `pulumi:"objectStorage"`
	Timer         *FunctionTriggerTimer         `pulumi:"timer"`
}

// The set of arguments for constructing a FunctionTrigger resource.
type FunctionTriggerArgs struct {
	Description   pulumi.StringPtrInput
	Dlq           FunctionTriggerDlqPtrInput
	FolderId      pulumi.StringPtrInput
	Function      FunctionTriggerFunctionInput
	Iot           FunctionTriggerIotPtrInput
	Labels        pulumi.StringMapInput
	LogGroup      FunctionTriggerLogGroupPtrInput
	Logging       FunctionTriggerLoggingPtrInput
	MessageQueue  FunctionTriggerMessageQueuePtrInput
	Name          pulumi.StringPtrInput
	ObjectStorage FunctionTriggerObjectStoragePtrInput
	Timer         FunctionTriggerTimerPtrInput
}

func (FunctionTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*functionTriggerArgs)(nil)).Elem()
}

type FunctionTriggerInput interface {
	pulumi.Input

	ToFunctionTriggerOutput() FunctionTriggerOutput
	ToFunctionTriggerOutputWithContext(ctx context.Context) FunctionTriggerOutput
}

func (*FunctionTrigger) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTrigger)(nil)).Elem()
}

func (i *FunctionTrigger) ToFunctionTriggerOutput() FunctionTriggerOutput {
	return i.ToFunctionTriggerOutputWithContext(context.Background())
}

func (i *FunctionTrigger) ToFunctionTriggerOutputWithContext(ctx context.Context) FunctionTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerOutput)
}

// FunctionTriggerArrayInput is an input type that accepts FunctionTriggerArray and FunctionTriggerArrayOutput values.
// You can construct a concrete instance of `FunctionTriggerArrayInput` via:
//
//	FunctionTriggerArray{ FunctionTriggerArgs{...} }
type FunctionTriggerArrayInput interface {
	pulumi.Input

	ToFunctionTriggerArrayOutput() FunctionTriggerArrayOutput
	ToFunctionTriggerArrayOutputWithContext(context.Context) FunctionTriggerArrayOutput
}

type FunctionTriggerArray []FunctionTriggerInput

func (FunctionTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FunctionTrigger)(nil)).Elem()
}

func (i FunctionTriggerArray) ToFunctionTriggerArrayOutput() FunctionTriggerArrayOutput {
	return i.ToFunctionTriggerArrayOutputWithContext(context.Background())
}

func (i FunctionTriggerArray) ToFunctionTriggerArrayOutputWithContext(ctx context.Context) FunctionTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerArrayOutput)
}

// FunctionTriggerMapInput is an input type that accepts FunctionTriggerMap and FunctionTriggerMapOutput values.
// You can construct a concrete instance of `FunctionTriggerMapInput` via:
//
//	FunctionTriggerMap{ "key": FunctionTriggerArgs{...} }
type FunctionTriggerMapInput interface {
	pulumi.Input

	ToFunctionTriggerMapOutput() FunctionTriggerMapOutput
	ToFunctionTriggerMapOutputWithContext(context.Context) FunctionTriggerMapOutput
}

type FunctionTriggerMap map[string]FunctionTriggerInput

func (FunctionTriggerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FunctionTrigger)(nil)).Elem()
}

func (i FunctionTriggerMap) ToFunctionTriggerMapOutput() FunctionTriggerMapOutput {
	return i.ToFunctionTriggerMapOutputWithContext(context.Background())
}

func (i FunctionTriggerMap) ToFunctionTriggerMapOutputWithContext(ctx context.Context) FunctionTriggerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerMapOutput)
}

type FunctionTriggerOutput struct{ *pulumi.OutputState }

func (FunctionTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTrigger)(nil)).Elem()
}

func (o FunctionTriggerOutput) ToFunctionTriggerOutput() FunctionTriggerOutput {
	return o
}

func (o FunctionTriggerOutput) ToFunctionTriggerOutputWithContext(ctx context.Context) FunctionTriggerOutput {
	return o
}

func (o FunctionTriggerOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *FunctionTrigger) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o FunctionTriggerOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTrigger) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerOutput) Dlq() FunctionTriggerDlqPtrOutput {
	return o.ApplyT(func(v *FunctionTrigger) FunctionTriggerDlqPtrOutput { return v.Dlq }).(FunctionTriggerDlqPtrOutput)
}

func (o FunctionTriggerOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *FunctionTrigger) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

func (o FunctionTriggerOutput) Function() FunctionTriggerFunctionOutput {
	return o.ApplyT(func(v *FunctionTrigger) FunctionTriggerFunctionOutput { return v.Function }).(FunctionTriggerFunctionOutput)
}

func (o FunctionTriggerOutput) Iot() FunctionTriggerIotPtrOutput {
	return o.ApplyT(func(v *FunctionTrigger) FunctionTriggerIotPtrOutput { return v.Iot }).(FunctionTriggerIotPtrOutput)
}

func (o FunctionTriggerOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FunctionTrigger) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o FunctionTriggerOutput) LogGroup() FunctionTriggerLogGroupPtrOutput {
	return o.ApplyT(func(v *FunctionTrigger) FunctionTriggerLogGroupPtrOutput { return v.LogGroup }).(FunctionTriggerLogGroupPtrOutput)
}

func (o FunctionTriggerOutput) Logging() FunctionTriggerLoggingPtrOutput {
	return o.ApplyT(func(v *FunctionTrigger) FunctionTriggerLoggingPtrOutput { return v.Logging }).(FunctionTriggerLoggingPtrOutput)
}

func (o FunctionTriggerOutput) MessageQueue() FunctionTriggerMessageQueuePtrOutput {
	return o.ApplyT(func(v *FunctionTrigger) FunctionTriggerMessageQueuePtrOutput { return v.MessageQueue }).(FunctionTriggerMessageQueuePtrOutput)
}

func (o FunctionTriggerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FunctionTrigger) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FunctionTriggerOutput) ObjectStorage() FunctionTriggerObjectStoragePtrOutput {
	return o.ApplyT(func(v *FunctionTrigger) FunctionTriggerObjectStoragePtrOutput { return v.ObjectStorage }).(FunctionTriggerObjectStoragePtrOutput)
}

func (o FunctionTriggerOutput) Timer() FunctionTriggerTimerPtrOutput {
	return o.ApplyT(func(v *FunctionTrigger) FunctionTriggerTimerPtrOutput { return v.Timer }).(FunctionTriggerTimerPtrOutput)
}

type FunctionTriggerArrayOutput struct{ *pulumi.OutputState }

func (FunctionTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FunctionTrigger)(nil)).Elem()
}

func (o FunctionTriggerArrayOutput) ToFunctionTriggerArrayOutput() FunctionTriggerArrayOutput {
	return o
}

func (o FunctionTriggerArrayOutput) ToFunctionTriggerArrayOutputWithContext(ctx context.Context) FunctionTriggerArrayOutput {
	return o
}

func (o FunctionTriggerArrayOutput) Index(i pulumi.IntInput) FunctionTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FunctionTrigger {
		return vs[0].([]*FunctionTrigger)[vs[1].(int)]
	}).(FunctionTriggerOutput)
}

type FunctionTriggerMapOutput struct{ *pulumi.OutputState }

func (FunctionTriggerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FunctionTrigger)(nil)).Elem()
}

func (o FunctionTriggerMapOutput) ToFunctionTriggerMapOutput() FunctionTriggerMapOutput {
	return o
}

func (o FunctionTriggerMapOutput) ToFunctionTriggerMapOutputWithContext(ctx context.Context) FunctionTriggerMapOutput {
	return o
}

func (o FunctionTriggerMapOutput) MapIndex(k pulumi.StringInput) FunctionTriggerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FunctionTrigger {
		return vs[0].(map[string]*FunctionTrigger)[vs[1].(string)]
	}).(FunctionTriggerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTriggerInput)(nil)).Elem(), &FunctionTrigger{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTriggerArrayInput)(nil)).Elem(), FunctionTriggerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTriggerMapInput)(nil)).Elem(), FunctionTriggerMap{})
	pulumi.RegisterOutputType(FunctionTriggerOutput{})
	pulumi.RegisterOutputType(FunctionTriggerArrayOutput{})
	pulumi.RegisterOutputType(FunctionTriggerMapOutput{})
}
