// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type KmsSymmetricKey struct {
	pulumi.CustomResourceState

	CreatedAt        pulumi.StringOutput    `pulumi:"createdAt"`
	DefaultAlgorithm pulumi.StringPtrOutput `pulumi:"defaultAlgorithm"`
	Description      pulumi.StringPtrOutput `pulumi:"description"`
	FolderId         pulumi.StringOutput    `pulumi:"folderId"`
	Labels           pulumi.StringMapOutput `pulumi:"labels"`
	Name             pulumi.StringOutput    `pulumi:"name"`
	RotatedAt        pulumi.StringOutput    `pulumi:"rotatedAt"`
	RotationPeriod   pulumi.StringPtrOutput `pulumi:"rotationPeriod"`
	Status           pulumi.StringOutput    `pulumi:"status"`
}

// NewKmsSymmetricKey registers a new resource with the given unique name, arguments, and options.
func NewKmsSymmetricKey(ctx *pulumi.Context,
	name string, args *KmsSymmetricKeyArgs, opts ...pulumi.ResourceOption) (*KmsSymmetricKey, error) {
	if args == nil {
		args = &KmsSymmetricKeyArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource KmsSymmetricKey
	err := ctx.RegisterResource("yandex:index/kmsSymmetricKey:KmsSymmetricKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKmsSymmetricKey gets an existing KmsSymmetricKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKmsSymmetricKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KmsSymmetricKeyState, opts ...pulumi.ResourceOption) (*KmsSymmetricKey, error) {
	var resource KmsSymmetricKey
	err := ctx.ReadResource("yandex:index/kmsSymmetricKey:KmsSymmetricKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KmsSymmetricKey resources.
type kmsSymmetricKeyState struct {
	CreatedAt        *string           `pulumi:"createdAt"`
	DefaultAlgorithm *string           `pulumi:"defaultAlgorithm"`
	Description      *string           `pulumi:"description"`
	FolderId         *string           `pulumi:"folderId"`
	Labels           map[string]string `pulumi:"labels"`
	Name             *string           `pulumi:"name"`
	RotatedAt        *string           `pulumi:"rotatedAt"`
	RotationPeriod   *string           `pulumi:"rotationPeriod"`
	Status           *string           `pulumi:"status"`
}

type KmsSymmetricKeyState struct {
	CreatedAt        pulumi.StringPtrInput
	DefaultAlgorithm pulumi.StringPtrInput
	Description      pulumi.StringPtrInput
	FolderId         pulumi.StringPtrInput
	Labels           pulumi.StringMapInput
	Name             pulumi.StringPtrInput
	RotatedAt        pulumi.StringPtrInput
	RotationPeriod   pulumi.StringPtrInput
	Status           pulumi.StringPtrInput
}

func (KmsSymmetricKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsSymmetricKeyState)(nil)).Elem()
}

type kmsSymmetricKeyArgs struct {
	DefaultAlgorithm *string           `pulumi:"defaultAlgorithm"`
	Description      *string           `pulumi:"description"`
	FolderId         *string           `pulumi:"folderId"`
	Labels           map[string]string `pulumi:"labels"`
	Name             *string           `pulumi:"name"`
	RotationPeriod   *string           `pulumi:"rotationPeriod"`
}

// The set of arguments for constructing a KmsSymmetricKey resource.
type KmsSymmetricKeyArgs struct {
	DefaultAlgorithm pulumi.StringPtrInput
	Description      pulumi.StringPtrInput
	FolderId         pulumi.StringPtrInput
	Labels           pulumi.StringMapInput
	Name             pulumi.StringPtrInput
	RotationPeriod   pulumi.StringPtrInput
}

func (KmsSymmetricKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsSymmetricKeyArgs)(nil)).Elem()
}

type KmsSymmetricKeyInput interface {
	pulumi.Input

	ToKmsSymmetricKeyOutput() KmsSymmetricKeyOutput
	ToKmsSymmetricKeyOutputWithContext(ctx context.Context) KmsSymmetricKeyOutput
}

func (*KmsSymmetricKey) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsSymmetricKey)(nil)).Elem()
}

func (i *KmsSymmetricKey) ToKmsSymmetricKeyOutput() KmsSymmetricKeyOutput {
	return i.ToKmsSymmetricKeyOutputWithContext(context.Background())
}

func (i *KmsSymmetricKey) ToKmsSymmetricKeyOutputWithContext(ctx context.Context) KmsSymmetricKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsSymmetricKeyOutput)
}

// KmsSymmetricKeyArrayInput is an input type that accepts KmsSymmetricKeyArray and KmsSymmetricKeyArrayOutput values.
// You can construct a concrete instance of `KmsSymmetricKeyArrayInput` via:
//
//	KmsSymmetricKeyArray{ KmsSymmetricKeyArgs{...} }
type KmsSymmetricKeyArrayInput interface {
	pulumi.Input

	ToKmsSymmetricKeyArrayOutput() KmsSymmetricKeyArrayOutput
	ToKmsSymmetricKeyArrayOutputWithContext(context.Context) KmsSymmetricKeyArrayOutput
}

type KmsSymmetricKeyArray []KmsSymmetricKeyInput

func (KmsSymmetricKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KmsSymmetricKey)(nil)).Elem()
}

func (i KmsSymmetricKeyArray) ToKmsSymmetricKeyArrayOutput() KmsSymmetricKeyArrayOutput {
	return i.ToKmsSymmetricKeyArrayOutputWithContext(context.Background())
}

func (i KmsSymmetricKeyArray) ToKmsSymmetricKeyArrayOutputWithContext(ctx context.Context) KmsSymmetricKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsSymmetricKeyArrayOutput)
}

// KmsSymmetricKeyMapInput is an input type that accepts KmsSymmetricKeyMap and KmsSymmetricKeyMapOutput values.
// You can construct a concrete instance of `KmsSymmetricKeyMapInput` via:
//
//	KmsSymmetricKeyMap{ "key": KmsSymmetricKeyArgs{...} }
type KmsSymmetricKeyMapInput interface {
	pulumi.Input

	ToKmsSymmetricKeyMapOutput() KmsSymmetricKeyMapOutput
	ToKmsSymmetricKeyMapOutputWithContext(context.Context) KmsSymmetricKeyMapOutput
}

type KmsSymmetricKeyMap map[string]KmsSymmetricKeyInput

func (KmsSymmetricKeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KmsSymmetricKey)(nil)).Elem()
}

func (i KmsSymmetricKeyMap) ToKmsSymmetricKeyMapOutput() KmsSymmetricKeyMapOutput {
	return i.ToKmsSymmetricKeyMapOutputWithContext(context.Background())
}

func (i KmsSymmetricKeyMap) ToKmsSymmetricKeyMapOutputWithContext(ctx context.Context) KmsSymmetricKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsSymmetricKeyMapOutput)
}

type KmsSymmetricKeyOutput struct{ *pulumi.OutputState }

func (KmsSymmetricKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsSymmetricKey)(nil)).Elem()
}

func (o KmsSymmetricKeyOutput) ToKmsSymmetricKeyOutput() KmsSymmetricKeyOutput {
	return o
}

func (o KmsSymmetricKeyOutput) ToKmsSymmetricKeyOutputWithContext(ctx context.Context) KmsSymmetricKeyOutput {
	return o
}

func (o KmsSymmetricKeyOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsSymmetricKey) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o KmsSymmetricKeyOutput) DefaultAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KmsSymmetricKey) pulumi.StringPtrOutput { return v.DefaultAlgorithm }).(pulumi.StringPtrOutput)
}

func (o KmsSymmetricKeyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KmsSymmetricKey) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o KmsSymmetricKeyOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsSymmetricKey) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

func (o KmsSymmetricKeyOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KmsSymmetricKey) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o KmsSymmetricKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsSymmetricKey) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o KmsSymmetricKeyOutput) RotatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsSymmetricKey) pulumi.StringOutput { return v.RotatedAt }).(pulumi.StringOutput)
}

func (o KmsSymmetricKeyOutput) RotationPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KmsSymmetricKey) pulumi.StringPtrOutput { return v.RotationPeriod }).(pulumi.StringPtrOutput)
}

func (o KmsSymmetricKeyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsSymmetricKey) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type KmsSymmetricKeyArrayOutput struct{ *pulumi.OutputState }

func (KmsSymmetricKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KmsSymmetricKey)(nil)).Elem()
}

func (o KmsSymmetricKeyArrayOutput) ToKmsSymmetricKeyArrayOutput() KmsSymmetricKeyArrayOutput {
	return o
}

func (o KmsSymmetricKeyArrayOutput) ToKmsSymmetricKeyArrayOutputWithContext(ctx context.Context) KmsSymmetricKeyArrayOutput {
	return o
}

func (o KmsSymmetricKeyArrayOutput) Index(i pulumi.IntInput) KmsSymmetricKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KmsSymmetricKey {
		return vs[0].([]*KmsSymmetricKey)[vs[1].(int)]
	}).(KmsSymmetricKeyOutput)
}

type KmsSymmetricKeyMapOutput struct{ *pulumi.OutputState }

func (KmsSymmetricKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KmsSymmetricKey)(nil)).Elem()
}

func (o KmsSymmetricKeyMapOutput) ToKmsSymmetricKeyMapOutput() KmsSymmetricKeyMapOutput {
	return o
}

func (o KmsSymmetricKeyMapOutput) ToKmsSymmetricKeyMapOutputWithContext(ctx context.Context) KmsSymmetricKeyMapOutput {
	return o
}

func (o KmsSymmetricKeyMapOutput) MapIndex(k pulumi.StringInput) KmsSymmetricKeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KmsSymmetricKey {
		return vs[0].(map[string]*KmsSymmetricKey)[vs[1].(string)]
	}).(KmsSymmetricKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KmsSymmetricKeyInput)(nil)).Elem(), &KmsSymmetricKey{})
	pulumi.RegisterInputType(reflect.TypeOf((*KmsSymmetricKeyArrayInput)(nil)).Elem(), KmsSymmetricKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KmsSymmetricKeyMapInput)(nil)).Elem(), KmsSymmetricKeyMap{})
	pulumi.RegisterOutputType(KmsSymmetricKeyOutput{})
	pulumi.RegisterOutputType(KmsSymmetricKeyArrayOutput{})
	pulumi.RegisterOutputType(KmsSymmetricKeyMapOutput{})
}
