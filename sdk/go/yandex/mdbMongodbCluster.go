// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MdbMongodbCluster struct {
	pulumi.CustomResourceState

	ClusterConfig      MdbMongodbClusterClusterConfigOutput     `pulumi:"clusterConfig"`
	ClusterId          pulumi.StringOutput                      `pulumi:"clusterId"`
	CreatedAt          pulumi.StringOutput                      `pulumi:"createdAt"`
	Databases          MdbMongodbClusterDatabaseArrayOutput     `pulumi:"databases"`
	DeletionProtection pulumi.BoolOutput                        `pulumi:"deletionProtection"`
	Description        pulumi.StringOutput                      `pulumi:"description"`
	Environment        pulumi.StringOutput                      `pulumi:"environment"`
	FolderId           pulumi.StringOutput                      `pulumi:"folderId"`
	Health             pulumi.StringOutput                      `pulumi:"health"`
	Hosts              MdbMongodbClusterHostArrayOutput         `pulumi:"hosts"`
	Labels             pulumi.StringMapOutput                   `pulumi:"labels"`
	MaintenanceWindow  MdbMongodbClusterMaintenanceWindowOutput `pulumi:"maintenanceWindow"`
	Name               pulumi.StringOutput                      `pulumi:"name"`
	NetworkId          pulumi.StringOutput                      `pulumi:"networkId"`
	Resources          MdbMongodbClusterResourcesOutput         `pulumi:"resources"`
	SecurityGroupIds   pulumi.StringArrayOutput                 `pulumi:"securityGroupIds"`
	Sharded            pulumi.BoolOutput                        `pulumi:"sharded"`
	Status             pulumi.StringOutput                      `pulumi:"status"`
	Users              MdbMongodbClusterUserArrayOutput         `pulumi:"users"`
}

// NewMdbMongodbCluster registers a new resource with the given unique name, arguments, and options.
func NewMdbMongodbCluster(ctx *pulumi.Context,
	name string, args *MdbMongodbClusterArgs, opts ...pulumi.ResourceOption) (*MdbMongodbCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterConfig == nil {
		return nil, errors.New("invalid value for required argument 'ClusterConfig'")
	}
	if args.Databases == nil {
		return nil, errors.New("invalid value for required argument 'Databases'")
	}
	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.Hosts == nil {
		return nil, errors.New("invalid value for required argument 'Hosts'")
	}
	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.Resources == nil {
		return nil, errors.New("invalid value for required argument 'Resources'")
	}
	if args.Users == nil {
		return nil, errors.New("invalid value for required argument 'Users'")
	}
	var resource MdbMongodbCluster
	err := ctx.RegisterResource("yandex:index/mdbMongodbCluster:MdbMongodbCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMdbMongodbCluster gets an existing MdbMongodbCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMdbMongodbCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MdbMongodbClusterState, opts ...pulumi.ResourceOption) (*MdbMongodbCluster, error) {
	var resource MdbMongodbCluster
	err := ctx.ReadResource("yandex:index/mdbMongodbCluster:MdbMongodbCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MdbMongodbCluster resources.
type mdbMongodbClusterState struct {
	ClusterConfig      *MdbMongodbClusterClusterConfig     `pulumi:"clusterConfig"`
	ClusterId          *string                             `pulumi:"clusterId"`
	CreatedAt          *string                             `pulumi:"createdAt"`
	Databases          []MdbMongodbClusterDatabase         `pulumi:"databases"`
	DeletionProtection *bool                               `pulumi:"deletionProtection"`
	Description        *string                             `pulumi:"description"`
	Environment        *string                             `pulumi:"environment"`
	FolderId           *string                             `pulumi:"folderId"`
	Health             *string                             `pulumi:"health"`
	Hosts              []MdbMongodbClusterHost             `pulumi:"hosts"`
	Labels             map[string]string                   `pulumi:"labels"`
	MaintenanceWindow  *MdbMongodbClusterMaintenanceWindow `pulumi:"maintenanceWindow"`
	Name               *string                             `pulumi:"name"`
	NetworkId          *string                             `pulumi:"networkId"`
	Resources          *MdbMongodbClusterResources         `pulumi:"resources"`
	SecurityGroupIds   []string                            `pulumi:"securityGroupIds"`
	Sharded            *bool                               `pulumi:"sharded"`
	Status             *string                             `pulumi:"status"`
	Users              []MdbMongodbClusterUser             `pulumi:"users"`
}

type MdbMongodbClusterState struct {
	ClusterConfig      MdbMongodbClusterClusterConfigPtrInput
	ClusterId          pulumi.StringPtrInput
	CreatedAt          pulumi.StringPtrInput
	Databases          MdbMongodbClusterDatabaseArrayInput
	DeletionProtection pulumi.BoolPtrInput
	Description        pulumi.StringPtrInput
	Environment        pulumi.StringPtrInput
	FolderId           pulumi.StringPtrInput
	Health             pulumi.StringPtrInput
	Hosts              MdbMongodbClusterHostArrayInput
	Labels             pulumi.StringMapInput
	MaintenanceWindow  MdbMongodbClusterMaintenanceWindowPtrInput
	Name               pulumi.StringPtrInput
	NetworkId          pulumi.StringPtrInput
	Resources          MdbMongodbClusterResourcesPtrInput
	SecurityGroupIds   pulumi.StringArrayInput
	Sharded            pulumi.BoolPtrInput
	Status             pulumi.StringPtrInput
	Users              MdbMongodbClusterUserArrayInput
}

func (MdbMongodbClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*mdbMongodbClusterState)(nil)).Elem()
}

type mdbMongodbClusterArgs struct {
	ClusterConfig      MdbMongodbClusterClusterConfig      `pulumi:"clusterConfig"`
	ClusterId          *string                             `pulumi:"clusterId"`
	Databases          []MdbMongodbClusterDatabase         `pulumi:"databases"`
	DeletionProtection *bool                               `pulumi:"deletionProtection"`
	Description        *string                             `pulumi:"description"`
	Environment        string                              `pulumi:"environment"`
	FolderId           *string                             `pulumi:"folderId"`
	Hosts              []MdbMongodbClusterHost             `pulumi:"hosts"`
	Labels             map[string]string                   `pulumi:"labels"`
	MaintenanceWindow  *MdbMongodbClusterMaintenanceWindow `pulumi:"maintenanceWindow"`
	Name               *string                             `pulumi:"name"`
	NetworkId          string                              `pulumi:"networkId"`
	Resources          MdbMongodbClusterResources          `pulumi:"resources"`
	SecurityGroupIds   []string                            `pulumi:"securityGroupIds"`
	Users              []MdbMongodbClusterUser             `pulumi:"users"`
}

// The set of arguments for constructing a MdbMongodbCluster resource.
type MdbMongodbClusterArgs struct {
	ClusterConfig      MdbMongodbClusterClusterConfigInput
	ClusterId          pulumi.StringPtrInput
	Databases          MdbMongodbClusterDatabaseArrayInput
	DeletionProtection pulumi.BoolPtrInput
	Description        pulumi.StringPtrInput
	Environment        pulumi.StringInput
	FolderId           pulumi.StringPtrInput
	Hosts              MdbMongodbClusterHostArrayInput
	Labels             pulumi.StringMapInput
	MaintenanceWindow  MdbMongodbClusterMaintenanceWindowPtrInput
	Name               pulumi.StringPtrInput
	NetworkId          pulumi.StringInput
	Resources          MdbMongodbClusterResourcesInput
	SecurityGroupIds   pulumi.StringArrayInput
	Users              MdbMongodbClusterUserArrayInput
}

func (MdbMongodbClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mdbMongodbClusterArgs)(nil)).Elem()
}

type MdbMongodbClusterInput interface {
	pulumi.Input

	ToMdbMongodbClusterOutput() MdbMongodbClusterOutput
	ToMdbMongodbClusterOutputWithContext(ctx context.Context) MdbMongodbClusterOutput
}

func (*MdbMongodbCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbMongodbCluster)(nil)).Elem()
}

func (i *MdbMongodbCluster) ToMdbMongodbClusterOutput() MdbMongodbClusterOutput {
	return i.ToMdbMongodbClusterOutputWithContext(context.Background())
}

func (i *MdbMongodbCluster) ToMdbMongodbClusterOutputWithContext(ctx context.Context) MdbMongodbClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterOutput)
}

// MdbMongodbClusterArrayInput is an input type that accepts MdbMongodbClusterArray and MdbMongodbClusterArrayOutput values.
// You can construct a concrete instance of `MdbMongodbClusterArrayInput` via:
//
//	MdbMongodbClusterArray{ MdbMongodbClusterArgs{...} }
type MdbMongodbClusterArrayInput interface {
	pulumi.Input

	ToMdbMongodbClusterArrayOutput() MdbMongodbClusterArrayOutput
	ToMdbMongodbClusterArrayOutputWithContext(context.Context) MdbMongodbClusterArrayOutput
}

type MdbMongodbClusterArray []MdbMongodbClusterInput

func (MdbMongodbClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MdbMongodbCluster)(nil)).Elem()
}

func (i MdbMongodbClusterArray) ToMdbMongodbClusterArrayOutput() MdbMongodbClusterArrayOutput {
	return i.ToMdbMongodbClusterArrayOutputWithContext(context.Background())
}

func (i MdbMongodbClusterArray) ToMdbMongodbClusterArrayOutputWithContext(ctx context.Context) MdbMongodbClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterArrayOutput)
}

// MdbMongodbClusterMapInput is an input type that accepts MdbMongodbClusterMap and MdbMongodbClusterMapOutput values.
// You can construct a concrete instance of `MdbMongodbClusterMapInput` via:
//
//	MdbMongodbClusterMap{ "key": MdbMongodbClusterArgs{...} }
type MdbMongodbClusterMapInput interface {
	pulumi.Input

	ToMdbMongodbClusterMapOutput() MdbMongodbClusterMapOutput
	ToMdbMongodbClusterMapOutputWithContext(context.Context) MdbMongodbClusterMapOutput
}

type MdbMongodbClusterMap map[string]MdbMongodbClusterInput

func (MdbMongodbClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MdbMongodbCluster)(nil)).Elem()
}

func (i MdbMongodbClusterMap) ToMdbMongodbClusterMapOutput() MdbMongodbClusterMapOutput {
	return i.ToMdbMongodbClusterMapOutputWithContext(context.Background())
}

func (i MdbMongodbClusterMap) ToMdbMongodbClusterMapOutputWithContext(ctx context.Context) MdbMongodbClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterMapOutput)
}

type MdbMongodbClusterOutput struct{ *pulumi.OutputState }

func (MdbMongodbClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbMongodbCluster)(nil)).Elem()
}

func (o MdbMongodbClusterOutput) ToMdbMongodbClusterOutput() MdbMongodbClusterOutput {
	return o
}

func (o MdbMongodbClusterOutput) ToMdbMongodbClusterOutputWithContext(ctx context.Context) MdbMongodbClusterOutput {
	return o
}

func (o MdbMongodbClusterOutput) ClusterConfig() MdbMongodbClusterClusterConfigOutput {
	return o.ApplyT(func(v *MdbMongodbCluster) MdbMongodbClusterClusterConfigOutput { return v.ClusterConfig }).(MdbMongodbClusterClusterConfigOutput)
}

func (o MdbMongodbClusterOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbMongodbCluster) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

func (o MdbMongodbClusterOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbMongodbCluster) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o MdbMongodbClusterOutput) Databases() MdbMongodbClusterDatabaseArrayOutput {
	return o.ApplyT(func(v *MdbMongodbCluster) MdbMongodbClusterDatabaseArrayOutput { return v.Databases }).(MdbMongodbClusterDatabaseArrayOutput)
}

func (o MdbMongodbClusterOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v *MdbMongodbCluster) pulumi.BoolOutput { return v.DeletionProtection }).(pulumi.BoolOutput)
}

func (o MdbMongodbClusterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbMongodbCluster) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o MdbMongodbClusterOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbMongodbCluster) pulumi.StringOutput { return v.Environment }).(pulumi.StringOutput)
}

func (o MdbMongodbClusterOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbMongodbCluster) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

func (o MdbMongodbClusterOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbMongodbCluster) pulumi.StringOutput { return v.Health }).(pulumi.StringOutput)
}

func (o MdbMongodbClusterOutput) Hosts() MdbMongodbClusterHostArrayOutput {
	return o.ApplyT(func(v *MdbMongodbCluster) MdbMongodbClusterHostArrayOutput { return v.Hosts }).(MdbMongodbClusterHostArrayOutput)
}

func (o MdbMongodbClusterOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MdbMongodbCluster) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o MdbMongodbClusterOutput) MaintenanceWindow() MdbMongodbClusterMaintenanceWindowOutput {
	return o.ApplyT(func(v *MdbMongodbCluster) MdbMongodbClusterMaintenanceWindowOutput { return v.MaintenanceWindow }).(MdbMongodbClusterMaintenanceWindowOutput)
}

func (o MdbMongodbClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbMongodbCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o MdbMongodbClusterOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbMongodbCluster) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

func (o MdbMongodbClusterOutput) Resources() MdbMongodbClusterResourcesOutput {
	return o.ApplyT(func(v *MdbMongodbCluster) MdbMongodbClusterResourcesOutput { return v.Resources }).(MdbMongodbClusterResourcesOutput)
}

func (o MdbMongodbClusterOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MdbMongodbCluster) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o MdbMongodbClusterOutput) Sharded() pulumi.BoolOutput {
	return o.ApplyT(func(v *MdbMongodbCluster) pulumi.BoolOutput { return v.Sharded }).(pulumi.BoolOutput)
}

func (o MdbMongodbClusterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbMongodbCluster) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o MdbMongodbClusterOutput) Users() MdbMongodbClusterUserArrayOutput {
	return o.ApplyT(func(v *MdbMongodbCluster) MdbMongodbClusterUserArrayOutput { return v.Users }).(MdbMongodbClusterUserArrayOutput)
}

type MdbMongodbClusterArrayOutput struct{ *pulumi.OutputState }

func (MdbMongodbClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MdbMongodbCluster)(nil)).Elem()
}

func (o MdbMongodbClusterArrayOutput) ToMdbMongodbClusterArrayOutput() MdbMongodbClusterArrayOutput {
	return o
}

func (o MdbMongodbClusterArrayOutput) ToMdbMongodbClusterArrayOutputWithContext(ctx context.Context) MdbMongodbClusterArrayOutput {
	return o
}

func (o MdbMongodbClusterArrayOutput) Index(i pulumi.IntInput) MdbMongodbClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MdbMongodbCluster {
		return vs[0].([]*MdbMongodbCluster)[vs[1].(int)]
	}).(MdbMongodbClusterOutput)
}

type MdbMongodbClusterMapOutput struct{ *pulumi.OutputState }

func (MdbMongodbClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MdbMongodbCluster)(nil)).Elem()
}

func (o MdbMongodbClusterMapOutput) ToMdbMongodbClusterMapOutput() MdbMongodbClusterMapOutput {
	return o
}

func (o MdbMongodbClusterMapOutput) ToMdbMongodbClusterMapOutputWithContext(ctx context.Context) MdbMongodbClusterMapOutput {
	return o
}

func (o MdbMongodbClusterMapOutput) MapIndex(k pulumi.StringInput) MdbMongodbClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MdbMongodbCluster {
		return vs[0].(map[string]*MdbMongodbCluster)[vs[1].(string)]
	}).(MdbMongodbClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MdbMongodbClusterInput)(nil)).Elem(), &MdbMongodbCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*MdbMongodbClusterArrayInput)(nil)).Elem(), MdbMongodbClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MdbMongodbClusterMapInput)(nil)).Elem(), MdbMongodbClusterMap{})
	pulumi.RegisterOutputType(MdbMongodbClusterOutput{})
	pulumi.RegisterOutputType(MdbMongodbClusterArrayOutput{})
	pulumi.RegisterOutputType(MdbMongodbClusterMapOutput{})
}
