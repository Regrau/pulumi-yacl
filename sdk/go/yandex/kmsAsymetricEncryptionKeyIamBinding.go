// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## yandex\_kms\_asymmetric\_encryption\_key\_iam\_binding
//
// Allows creation and management of a single binding within IAM policy for
// an existing Yandex KMS Asymmetric Encryption Key.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := yandex.NewKmsAsymetricEncryptionKey(ctx, "your-key", &yandex.KmsAsymetricEncryptionKeyArgs{
//				FolderId: pulumi.String("your-folder-id"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = yandex.NewKmsAsymetricEncryptionKeyIamBinding(ctx, "viewer", &yandex.KmsAsymetricEncryptionKeyIamBindingArgs{
//				AsymmetricEncryptionKeyId: your_key.ID(),
//				Role:                      pulumi.String("viewer"),
//				Members: pulumi.StringArray{
//					pulumi.String("userAccount:foo_user_id"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// IAM binding imports use space-delimited identifiers; first the resource in question and then the role. These bindings can be imported using the `asymmetric_encryption_key_id` and role, e.g.
//
// ```sh
//
//	$ pulumi import yandex:index/kmsAsymetricEncryptionKeyIamBinding:KmsAsymetricEncryptionKeyIamBinding viewer "asymmetric_encryption_key_id viewer"
//
// ```
type KmsAsymetricEncryptionKeyIamBinding struct {
	pulumi.CustomResourceState

	// The [Yandex Key Management Service](https://cloud.yandex.com/docs/kms/) Asymmetric Encryption Key ID to apply a binding to.
	AsymmetricEncryptionKeyId pulumi.StringOutput `pulumi:"asymmetricEncryptionKeyId"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **serviceAccount:{service_account_id}**: A unique service account ID.
	// * **system:{allUsers|allAuthenticatedUsers}**: see [system groups](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group)
	Members pulumi.StringArrayOutput `pulumi:"members"`
	// The role that should be applied. See [roles](https://cloud.yandex.com/docs/kms/security/).
	Role       pulumi.StringOutput `pulumi:"role"`
	SleepAfter pulumi.IntPtrOutput `pulumi:"sleepAfter"`
}

// NewKmsAsymetricEncryptionKeyIamBinding registers a new resource with the given unique name, arguments, and options.
func NewKmsAsymetricEncryptionKeyIamBinding(ctx *pulumi.Context,
	name string, args *KmsAsymetricEncryptionKeyIamBindingArgs, opts ...pulumi.ResourceOption) (*KmsAsymetricEncryptionKeyIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AsymmetricEncryptionKeyId == nil {
		return nil, errors.New("invalid value for required argument 'AsymmetricEncryptionKeyId'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource KmsAsymetricEncryptionKeyIamBinding
	err := ctx.RegisterResource("yandex:index/kmsAsymetricEncryptionKeyIamBinding:KmsAsymetricEncryptionKeyIamBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKmsAsymetricEncryptionKeyIamBinding gets an existing KmsAsymetricEncryptionKeyIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKmsAsymetricEncryptionKeyIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KmsAsymetricEncryptionKeyIamBindingState, opts ...pulumi.ResourceOption) (*KmsAsymetricEncryptionKeyIamBinding, error) {
	var resource KmsAsymetricEncryptionKeyIamBinding
	err := ctx.ReadResource("yandex:index/kmsAsymetricEncryptionKeyIamBinding:KmsAsymetricEncryptionKeyIamBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KmsAsymetricEncryptionKeyIamBinding resources.
type kmsAsymetricEncryptionKeyIamBindingState struct {
	// The [Yandex Key Management Service](https://cloud.yandex.com/docs/kms/) Asymmetric Encryption Key ID to apply a binding to.
	AsymmetricEncryptionKeyId *string `pulumi:"asymmetricEncryptionKeyId"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **serviceAccount:{service_account_id}**: A unique service account ID.
	// * **system:{allUsers|allAuthenticatedUsers}**: see [system groups](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group)
	Members []string `pulumi:"members"`
	// The role that should be applied. See [roles](https://cloud.yandex.com/docs/kms/security/).
	Role       *string `pulumi:"role"`
	SleepAfter *int    `pulumi:"sleepAfter"`
}

type KmsAsymetricEncryptionKeyIamBindingState struct {
	// The [Yandex Key Management Service](https://cloud.yandex.com/docs/kms/) Asymmetric Encryption Key ID to apply a binding to.
	AsymmetricEncryptionKeyId pulumi.StringPtrInput
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **serviceAccount:{service_account_id}**: A unique service account ID.
	// * **system:{allUsers|allAuthenticatedUsers}**: see [system groups](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group)
	Members pulumi.StringArrayInput
	// The role that should be applied. See [roles](https://cloud.yandex.com/docs/kms/security/).
	Role       pulumi.StringPtrInput
	SleepAfter pulumi.IntPtrInput
}

func (KmsAsymetricEncryptionKeyIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsAsymetricEncryptionKeyIamBindingState)(nil)).Elem()
}

type kmsAsymetricEncryptionKeyIamBindingArgs struct {
	// The [Yandex Key Management Service](https://cloud.yandex.com/docs/kms/) Asymmetric Encryption Key ID to apply a binding to.
	AsymmetricEncryptionKeyId string `pulumi:"asymmetricEncryptionKeyId"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **serviceAccount:{service_account_id}**: A unique service account ID.
	// * **system:{allUsers|allAuthenticatedUsers}**: see [system groups](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group)
	Members []string `pulumi:"members"`
	// The role that should be applied. See [roles](https://cloud.yandex.com/docs/kms/security/).
	Role       string `pulumi:"role"`
	SleepAfter *int   `pulumi:"sleepAfter"`
}

// The set of arguments for constructing a KmsAsymetricEncryptionKeyIamBinding resource.
type KmsAsymetricEncryptionKeyIamBindingArgs struct {
	// The [Yandex Key Management Service](https://cloud.yandex.com/docs/kms/) Asymmetric Encryption Key ID to apply a binding to.
	AsymmetricEncryptionKeyId pulumi.StringInput
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **serviceAccount:{service_account_id}**: A unique service account ID.
	// * **system:{allUsers|allAuthenticatedUsers}**: see [system groups](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group)
	Members pulumi.StringArrayInput
	// The role that should be applied. See [roles](https://cloud.yandex.com/docs/kms/security/).
	Role       pulumi.StringInput
	SleepAfter pulumi.IntPtrInput
}

func (KmsAsymetricEncryptionKeyIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsAsymetricEncryptionKeyIamBindingArgs)(nil)).Elem()
}

type KmsAsymetricEncryptionKeyIamBindingInput interface {
	pulumi.Input

	ToKmsAsymetricEncryptionKeyIamBindingOutput() KmsAsymetricEncryptionKeyIamBindingOutput
	ToKmsAsymetricEncryptionKeyIamBindingOutputWithContext(ctx context.Context) KmsAsymetricEncryptionKeyIamBindingOutput
}

func (*KmsAsymetricEncryptionKeyIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsAsymetricEncryptionKeyIamBinding)(nil)).Elem()
}

func (i *KmsAsymetricEncryptionKeyIamBinding) ToKmsAsymetricEncryptionKeyIamBindingOutput() KmsAsymetricEncryptionKeyIamBindingOutput {
	return i.ToKmsAsymetricEncryptionKeyIamBindingOutputWithContext(context.Background())
}

func (i *KmsAsymetricEncryptionKeyIamBinding) ToKmsAsymetricEncryptionKeyIamBindingOutputWithContext(ctx context.Context) KmsAsymetricEncryptionKeyIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsAsymetricEncryptionKeyIamBindingOutput)
}

// KmsAsymetricEncryptionKeyIamBindingArrayInput is an input type that accepts KmsAsymetricEncryptionKeyIamBindingArray and KmsAsymetricEncryptionKeyIamBindingArrayOutput values.
// You can construct a concrete instance of `KmsAsymetricEncryptionKeyIamBindingArrayInput` via:
//
//	KmsAsymetricEncryptionKeyIamBindingArray{ KmsAsymetricEncryptionKeyIamBindingArgs{...} }
type KmsAsymetricEncryptionKeyIamBindingArrayInput interface {
	pulumi.Input

	ToKmsAsymetricEncryptionKeyIamBindingArrayOutput() KmsAsymetricEncryptionKeyIamBindingArrayOutput
	ToKmsAsymetricEncryptionKeyIamBindingArrayOutputWithContext(context.Context) KmsAsymetricEncryptionKeyIamBindingArrayOutput
}

type KmsAsymetricEncryptionKeyIamBindingArray []KmsAsymetricEncryptionKeyIamBindingInput

func (KmsAsymetricEncryptionKeyIamBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KmsAsymetricEncryptionKeyIamBinding)(nil)).Elem()
}

func (i KmsAsymetricEncryptionKeyIamBindingArray) ToKmsAsymetricEncryptionKeyIamBindingArrayOutput() KmsAsymetricEncryptionKeyIamBindingArrayOutput {
	return i.ToKmsAsymetricEncryptionKeyIamBindingArrayOutputWithContext(context.Background())
}

func (i KmsAsymetricEncryptionKeyIamBindingArray) ToKmsAsymetricEncryptionKeyIamBindingArrayOutputWithContext(ctx context.Context) KmsAsymetricEncryptionKeyIamBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsAsymetricEncryptionKeyIamBindingArrayOutput)
}

// KmsAsymetricEncryptionKeyIamBindingMapInput is an input type that accepts KmsAsymetricEncryptionKeyIamBindingMap and KmsAsymetricEncryptionKeyIamBindingMapOutput values.
// You can construct a concrete instance of `KmsAsymetricEncryptionKeyIamBindingMapInput` via:
//
//	KmsAsymetricEncryptionKeyIamBindingMap{ "key": KmsAsymetricEncryptionKeyIamBindingArgs{...} }
type KmsAsymetricEncryptionKeyIamBindingMapInput interface {
	pulumi.Input

	ToKmsAsymetricEncryptionKeyIamBindingMapOutput() KmsAsymetricEncryptionKeyIamBindingMapOutput
	ToKmsAsymetricEncryptionKeyIamBindingMapOutputWithContext(context.Context) KmsAsymetricEncryptionKeyIamBindingMapOutput
}

type KmsAsymetricEncryptionKeyIamBindingMap map[string]KmsAsymetricEncryptionKeyIamBindingInput

func (KmsAsymetricEncryptionKeyIamBindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KmsAsymetricEncryptionKeyIamBinding)(nil)).Elem()
}

func (i KmsAsymetricEncryptionKeyIamBindingMap) ToKmsAsymetricEncryptionKeyIamBindingMapOutput() KmsAsymetricEncryptionKeyIamBindingMapOutput {
	return i.ToKmsAsymetricEncryptionKeyIamBindingMapOutputWithContext(context.Background())
}

func (i KmsAsymetricEncryptionKeyIamBindingMap) ToKmsAsymetricEncryptionKeyIamBindingMapOutputWithContext(ctx context.Context) KmsAsymetricEncryptionKeyIamBindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsAsymetricEncryptionKeyIamBindingMapOutput)
}

type KmsAsymetricEncryptionKeyIamBindingOutput struct{ *pulumi.OutputState }

func (KmsAsymetricEncryptionKeyIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsAsymetricEncryptionKeyIamBinding)(nil)).Elem()
}

func (o KmsAsymetricEncryptionKeyIamBindingOutput) ToKmsAsymetricEncryptionKeyIamBindingOutput() KmsAsymetricEncryptionKeyIamBindingOutput {
	return o
}

func (o KmsAsymetricEncryptionKeyIamBindingOutput) ToKmsAsymetricEncryptionKeyIamBindingOutputWithContext(ctx context.Context) KmsAsymetricEncryptionKeyIamBindingOutput {
	return o
}

// The [Yandex Key Management Service](https://cloud.yandex.com/docs/kms/) Asymmetric Encryption Key ID to apply a binding to.
func (o KmsAsymetricEncryptionKeyIamBindingOutput) AsymmetricEncryptionKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsAsymetricEncryptionKeyIamBinding) pulumi.StringOutput { return v.AsymmetricEncryptionKeyId }).(pulumi.StringOutput)
}

// Identities that will be granted the privilege in `role`.
// Each entry can have one of the following values:
// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
// * **serviceAccount:{service_account_id}**: A unique service account ID.
// * **system:{allUsers|allAuthenticatedUsers}**: see [system groups](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group)
func (o KmsAsymetricEncryptionKeyIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KmsAsymetricEncryptionKeyIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

// The role that should be applied. See [roles](https://cloud.yandex.com/docs/kms/security/).
func (o KmsAsymetricEncryptionKeyIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsAsymetricEncryptionKeyIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o KmsAsymetricEncryptionKeyIamBindingOutput) SleepAfter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KmsAsymetricEncryptionKeyIamBinding) pulumi.IntPtrOutput { return v.SleepAfter }).(pulumi.IntPtrOutput)
}

type KmsAsymetricEncryptionKeyIamBindingArrayOutput struct{ *pulumi.OutputState }

func (KmsAsymetricEncryptionKeyIamBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KmsAsymetricEncryptionKeyIamBinding)(nil)).Elem()
}

func (o KmsAsymetricEncryptionKeyIamBindingArrayOutput) ToKmsAsymetricEncryptionKeyIamBindingArrayOutput() KmsAsymetricEncryptionKeyIamBindingArrayOutput {
	return o
}

func (o KmsAsymetricEncryptionKeyIamBindingArrayOutput) ToKmsAsymetricEncryptionKeyIamBindingArrayOutputWithContext(ctx context.Context) KmsAsymetricEncryptionKeyIamBindingArrayOutput {
	return o
}

func (o KmsAsymetricEncryptionKeyIamBindingArrayOutput) Index(i pulumi.IntInput) KmsAsymetricEncryptionKeyIamBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KmsAsymetricEncryptionKeyIamBinding {
		return vs[0].([]*KmsAsymetricEncryptionKeyIamBinding)[vs[1].(int)]
	}).(KmsAsymetricEncryptionKeyIamBindingOutput)
}

type KmsAsymetricEncryptionKeyIamBindingMapOutput struct{ *pulumi.OutputState }

func (KmsAsymetricEncryptionKeyIamBindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KmsAsymetricEncryptionKeyIamBinding)(nil)).Elem()
}

func (o KmsAsymetricEncryptionKeyIamBindingMapOutput) ToKmsAsymetricEncryptionKeyIamBindingMapOutput() KmsAsymetricEncryptionKeyIamBindingMapOutput {
	return o
}

func (o KmsAsymetricEncryptionKeyIamBindingMapOutput) ToKmsAsymetricEncryptionKeyIamBindingMapOutputWithContext(ctx context.Context) KmsAsymetricEncryptionKeyIamBindingMapOutput {
	return o
}

func (o KmsAsymetricEncryptionKeyIamBindingMapOutput) MapIndex(k pulumi.StringInput) KmsAsymetricEncryptionKeyIamBindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KmsAsymetricEncryptionKeyIamBinding {
		return vs[0].(map[string]*KmsAsymetricEncryptionKeyIamBinding)[vs[1].(string)]
	}).(KmsAsymetricEncryptionKeyIamBindingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KmsAsymetricEncryptionKeyIamBindingInput)(nil)).Elem(), &KmsAsymetricEncryptionKeyIamBinding{})
	pulumi.RegisterInputType(reflect.TypeOf((*KmsAsymetricEncryptionKeyIamBindingArrayInput)(nil)).Elem(), KmsAsymetricEncryptionKeyIamBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KmsAsymetricEncryptionKeyIamBindingMapInput)(nil)).Elem(), KmsAsymetricEncryptionKeyIamBindingMap{})
	pulumi.RegisterOutputType(KmsAsymetricEncryptionKeyIamBindingOutput{})
	pulumi.RegisterOutputType(KmsAsymetricEncryptionKeyIamBindingArrayOutput{})
	pulumi.RegisterOutputType(KmsAsymetricEncryptionKeyIamBindingMapOutput{})
}
