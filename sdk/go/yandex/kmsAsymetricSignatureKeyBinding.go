// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## yandex\_kms\_asymmetric\_signature\_key\_iam\_binding
//
// Allows creation and management of a single binding within IAM policy for
// an existing Yandex KMS Asymmetric Signature Key.
//
// ## Import
//
// IAM binding imports use space-delimited identifiers; first the resource in question and then the role. These bindings can be imported using the `asymmetric_signature_key_id` and role, e.g.
//
// ```sh
//
//	$ pulumi import yandex:index/kmsAsymetricSignatureKeyBinding:KmsAsymetricSignatureKeyBinding viewer "asymmetric_signature_key_id viewer"
//
// ```
type KmsAsymetricSignatureKeyBinding struct {
	pulumi.CustomResourceState

	// The [Yandex Key Management Service](https://cloud.yandex.com/docs/kms/) Asymmetric Signature Key ID to apply a binding to.
	AsymmetricSignatureKeyId pulumi.StringOutput `pulumi:"asymmetricSignatureKeyId"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **serviceAccount:{service_account_id}**: A unique service account ID.
	// * **system:{allUsers|allAuthenticatedUsers}**: see [system groups](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group)
	Members pulumi.StringArrayOutput `pulumi:"members"`
	// The role that should be applied. See [roles](https://cloud.yandex.com/docs/kms/security/).
	Role       pulumi.StringOutput `pulumi:"role"`
	SleepAfter pulumi.IntPtrOutput `pulumi:"sleepAfter"`
}

// NewKmsAsymetricSignatureKeyBinding registers a new resource with the given unique name, arguments, and options.
func NewKmsAsymetricSignatureKeyBinding(ctx *pulumi.Context,
	name string, args *KmsAsymetricSignatureKeyBindingArgs, opts ...pulumi.ResourceOption) (*KmsAsymetricSignatureKeyBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AsymmetricSignatureKeyId == nil {
		return nil, errors.New("invalid value for required argument 'AsymmetricSignatureKeyId'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource KmsAsymetricSignatureKeyBinding
	err := ctx.RegisterResource("yandex:index/kmsAsymetricSignatureKeyBinding:KmsAsymetricSignatureKeyBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKmsAsymetricSignatureKeyBinding gets an existing KmsAsymetricSignatureKeyBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKmsAsymetricSignatureKeyBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KmsAsymetricSignatureKeyBindingState, opts ...pulumi.ResourceOption) (*KmsAsymetricSignatureKeyBinding, error) {
	var resource KmsAsymetricSignatureKeyBinding
	err := ctx.ReadResource("yandex:index/kmsAsymetricSignatureKeyBinding:KmsAsymetricSignatureKeyBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KmsAsymetricSignatureKeyBinding resources.
type kmsAsymetricSignatureKeyBindingState struct {
	// The [Yandex Key Management Service](https://cloud.yandex.com/docs/kms/) Asymmetric Signature Key ID to apply a binding to.
	AsymmetricSignatureKeyId *string `pulumi:"asymmetricSignatureKeyId"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **serviceAccount:{service_account_id}**: A unique service account ID.
	// * **system:{allUsers|allAuthenticatedUsers}**: see [system groups](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group)
	Members []string `pulumi:"members"`
	// The role that should be applied. See [roles](https://cloud.yandex.com/docs/kms/security/).
	Role       *string `pulumi:"role"`
	SleepAfter *int    `pulumi:"sleepAfter"`
}

type KmsAsymetricSignatureKeyBindingState struct {
	// The [Yandex Key Management Service](https://cloud.yandex.com/docs/kms/) Asymmetric Signature Key ID to apply a binding to.
	AsymmetricSignatureKeyId pulumi.StringPtrInput
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **serviceAccount:{service_account_id}**: A unique service account ID.
	// * **system:{allUsers|allAuthenticatedUsers}**: see [system groups](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group)
	Members pulumi.StringArrayInput
	// The role that should be applied. See [roles](https://cloud.yandex.com/docs/kms/security/).
	Role       pulumi.StringPtrInput
	SleepAfter pulumi.IntPtrInput
}

func (KmsAsymetricSignatureKeyBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsAsymetricSignatureKeyBindingState)(nil)).Elem()
}

type kmsAsymetricSignatureKeyBindingArgs struct {
	// The [Yandex Key Management Service](https://cloud.yandex.com/docs/kms/) Asymmetric Signature Key ID to apply a binding to.
	AsymmetricSignatureKeyId string `pulumi:"asymmetricSignatureKeyId"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **serviceAccount:{service_account_id}**: A unique service account ID.
	// * **system:{allUsers|allAuthenticatedUsers}**: see [system groups](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group)
	Members []string `pulumi:"members"`
	// The role that should be applied. See [roles](https://cloud.yandex.com/docs/kms/security/).
	Role       string `pulumi:"role"`
	SleepAfter *int   `pulumi:"sleepAfter"`
}

// The set of arguments for constructing a KmsAsymetricSignatureKeyBinding resource.
type KmsAsymetricSignatureKeyBindingArgs struct {
	// The [Yandex Key Management Service](https://cloud.yandex.com/docs/kms/) Asymmetric Signature Key ID to apply a binding to.
	AsymmetricSignatureKeyId pulumi.StringInput
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **serviceAccount:{service_account_id}**: A unique service account ID.
	// * **system:{allUsers|allAuthenticatedUsers}**: see [system groups](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group)
	Members pulumi.StringArrayInput
	// The role that should be applied. See [roles](https://cloud.yandex.com/docs/kms/security/).
	Role       pulumi.StringInput
	SleepAfter pulumi.IntPtrInput
}

func (KmsAsymetricSignatureKeyBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsAsymetricSignatureKeyBindingArgs)(nil)).Elem()
}

type KmsAsymetricSignatureKeyBindingInput interface {
	pulumi.Input

	ToKmsAsymetricSignatureKeyBindingOutput() KmsAsymetricSignatureKeyBindingOutput
	ToKmsAsymetricSignatureKeyBindingOutputWithContext(ctx context.Context) KmsAsymetricSignatureKeyBindingOutput
}

func (*KmsAsymetricSignatureKeyBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsAsymetricSignatureKeyBinding)(nil)).Elem()
}

func (i *KmsAsymetricSignatureKeyBinding) ToKmsAsymetricSignatureKeyBindingOutput() KmsAsymetricSignatureKeyBindingOutput {
	return i.ToKmsAsymetricSignatureKeyBindingOutputWithContext(context.Background())
}

func (i *KmsAsymetricSignatureKeyBinding) ToKmsAsymetricSignatureKeyBindingOutputWithContext(ctx context.Context) KmsAsymetricSignatureKeyBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsAsymetricSignatureKeyBindingOutput)
}

// KmsAsymetricSignatureKeyBindingArrayInput is an input type that accepts KmsAsymetricSignatureKeyBindingArray and KmsAsymetricSignatureKeyBindingArrayOutput values.
// You can construct a concrete instance of `KmsAsymetricSignatureKeyBindingArrayInput` via:
//
//	KmsAsymetricSignatureKeyBindingArray{ KmsAsymetricSignatureKeyBindingArgs{...} }
type KmsAsymetricSignatureKeyBindingArrayInput interface {
	pulumi.Input

	ToKmsAsymetricSignatureKeyBindingArrayOutput() KmsAsymetricSignatureKeyBindingArrayOutput
	ToKmsAsymetricSignatureKeyBindingArrayOutputWithContext(context.Context) KmsAsymetricSignatureKeyBindingArrayOutput
}

type KmsAsymetricSignatureKeyBindingArray []KmsAsymetricSignatureKeyBindingInput

func (KmsAsymetricSignatureKeyBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KmsAsymetricSignatureKeyBinding)(nil)).Elem()
}

func (i KmsAsymetricSignatureKeyBindingArray) ToKmsAsymetricSignatureKeyBindingArrayOutput() KmsAsymetricSignatureKeyBindingArrayOutput {
	return i.ToKmsAsymetricSignatureKeyBindingArrayOutputWithContext(context.Background())
}

func (i KmsAsymetricSignatureKeyBindingArray) ToKmsAsymetricSignatureKeyBindingArrayOutputWithContext(ctx context.Context) KmsAsymetricSignatureKeyBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsAsymetricSignatureKeyBindingArrayOutput)
}

// KmsAsymetricSignatureKeyBindingMapInput is an input type that accepts KmsAsymetricSignatureKeyBindingMap and KmsAsymetricSignatureKeyBindingMapOutput values.
// You can construct a concrete instance of `KmsAsymetricSignatureKeyBindingMapInput` via:
//
//	KmsAsymetricSignatureKeyBindingMap{ "key": KmsAsymetricSignatureKeyBindingArgs{...} }
type KmsAsymetricSignatureKeyBindingMapInput interface {
	pulumi.Input

	ToKmsAsymetricSignatureKeyBindingMapOutput() KmsAsymetricSignatureKeyBindingMapOutput
	ToKmsAsymetricSignatureKeyBindingMapOutputWithContext(context.Context) KmsAsymetricSignatureKeyBindingMapOutput
}

type KmsAsymetricSignatureKeyBindingMap map[string]KmsAsymetricSignatureKeyBindingInput

func (KmsAsymetricSignatureKeyBindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KmsAsymetricSignatureKeyBinding)(nil)).Elem()
}

func (i KmsAsymetricSignatureKeyBindingMap) ToKmsAsymetricSignatureKeyBindingMapOutput() KmsAsymetricSignatureKeyBindingMapOutput {
	return i.ToKmsAsymetricSignatureKeyBindingMapOutputWithContext(context.Background())
}

func (i KmsAsymetricSignatureKeyBindingMap) ToKmsAsymetricSignatureKeyBindingMapOutputWithContext(ctx context.Context) KmsAsymetricSignatureKeyBindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsAsymetricSignatureKeyBindingMapOutput)
}

type KmsAsymetricSignatureKeyBindingOutput struct{ *pulumi.OutputState }

func (KmsAsymetricSignatureKeyBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsAsymetricSignatureKeyBinding)(nil)).Elem()
}

func (o KmsAsymetricSignatureKeyBindingOutput) ToKmsAsymetricSignatureKeyBindingOutput() KmsAsymetricSignatureKeyBindingOutput {
	return o
}

func (o KmsAsymetricSignatureKeyBindingOutput) ToKmsAsymetricSignatureKeyBindingOutputWithContext(ctx context.Context) KmsAsymetricSignatureKeyBindingOutput {
	return o
}

// The [Yandex Key Management Service](https://cloud.yandex.com/docs/kms/) Asymmetric Signature Key ID to apply a binding to.
func (o KmsAsymetricSignatureKeyBindingOutput) AsymmetricSignatureKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsAsymetricSignatureKeyBinding) pulumi.StringOutput { return v.AsymmetricSignatureKeyId }).(pulumi.StringOutput)
}

// Identities that will be granted the privilege in `role`.
// Each entry can have one of the following values:
// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
// * **serviceAccount:{service_account_id}**: A unique service account ID.
// * **system:{allUsers|allAuthenticatedUsers}**: see [system groups](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group)
func (o KmsAsymetricSignatureKeyBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KmsAsymetricSignatureKeyBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

// The role that should be applied. See [roles](https://cloud.yandex.com/docs/kms/security/).
func (o KmsAsymetricSignatureKeyBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsAsymetricSignatureKeyBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o KmsAsymetricSignatureKeyBindingOutput) SleepAfter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KmsAsymetricSignatureKeyBinding) pulumi.IntPtrOutput { return v.SleepAfter }).(pulumi.IntPtrOutput)
}

type KmsAsymetricSignatureKeyBindingArrayOutput struct{ *pulumi.OutputState }

func (KmsAsymetricSignatureKeyBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KmsAsymetricSignatureKeyBinding)(nil)).Elem()
}

func (o KmsAsymetricSignatureKeyBindingArrayOutput) ToKmsAsymetricSignatureKeyBindingArrayOutput() KmsAsymetricSignatureKeyBindingArrayOutput {
	return o
}

func (o KmsAsymetricSignatureKeyBindingArrayOutput) ToKmsAsymetricSignatureKeyBindingArrayOutputWithContext(ctx context.Context) KmsAsymetricSignatureKeyBindingArrayOutput {
	return o
}

func (o KmsAsymetricSignatureKeyBindingArrayOutput) Index(i pulumi.IntInput) KmsAsymetricSignatureKeyBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KmsAsymetricSignatureKeyBinding {
		return vs[0].([]*KmsAsymetricSignatureKeyBinding)[vs[1].(int)]
	}).(KmsAsymetricSignatureKeyBindingOutput)
}

type KmsAsymetricSignatureKeyBindingMapOutput struct{ *pulumi.OutputState }

func (KmsAsymetricSignatureKeyBindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KmsAsymetricSignatureKeyBinding)(nil)).Elem()
}

func (o KmsAsymetricSignatureKeyBindingMapOutput) ToKmsAsymetricSignatureKeyBindingMapOutput() KmsAsymetricSignatureKeyBindingMapOutput {
	return o
}

func (o KmsAsymetricSignatureKeyBindingMapOutput) ToKmsAsymetricSignatureKeyBindingMapOutputWithContext(ctx context.Context) KmsAsymetricSignatureKeyBindingMapOutput {
	return o
}

func (o KmsAsymetricSignatureKeyBindingMapOutput) MapIndex(k pulumi.StringInput) KmsAsymetricSignatureKeyBindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KmsAsymetricSignatureKeyBinding {
		return vs[0].(map[string]*KmsAsymetricSignatureKeyBinding)[vs[1].(string)]
	}).(KmsAsymetricSignatureKeyBindingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KmsAsymetricSignatureKeyBindingInput)(nil)).Elem(), &KmsAsymetricSignatureKeyBinding{})
	pulumi.RegisterInputType(reflect.TypeOf((*KmsAsymetricSignatureKeyBindingArrayInput)(nil)).Elem(), KmsAsymetricSignatureKeyBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KmsAsymetricSignatureKeyBindingMapInput)(nil)).Elem(), KmsAsymetricSignatureKeyBindingMap{})
	pulumi.RegisterOutputType(KmsAsymetricSignatureKeyBindingOutput{})
	pulumi.RegisterOutputType(KmsAsymetricSignatureKeyBindingArrayOutput{})
	pulumi.RegisterOutputType(KmsAsymetricSignatureKeyBindingMapOutput{})
}
