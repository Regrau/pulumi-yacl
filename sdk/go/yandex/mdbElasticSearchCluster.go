// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MdbElasticSearchCluster struct {
	pulumi.CustomResourceState

	Config             MdbElasticSearchClusterConfigOutput            `pulumi:"config"`
	CreatedAt          pulumi.StringOutput                            `pulumi:"createdAt"`
	DeletionProtection pulumi.BoolOutput                              `pulumi:"deletionProtection"`
	Description        pulumi.StringPtrOutput                         `pulumi:"description"`
	Environment        pulumi.StringOutput                            `pulumi:"environment"`
	FolderId           pulumi.StringOutput                            `pulumi:"folderId"`
	Health             pulumi.StringOutput                            `pulumi:"health"`
	Hosts              MdbElasticSearchClusterHostArrayOutput         `pulumi:"hosts"`
	Labels             pulumi.StringMapOutput                         `pulumi:"labels"`
	MaintenanceWindow  MdbElasticSearchClusterMaintenanceWindowOutput `pulumi:"maintenanceWindow"`
	Name               pulumi.StringOutput                            `pulumi:"name"`
	NetworkId          pulumi.StringOutput                            `pulumi:"networkId"`
	SecurityGroupIds   pulumi.StringArrayOutput                       `pulumi:"securityGroupIds"`
	ServiceAccountId   pulumi.StringPtrOutput                         `pulumi:"serviceAccountId"`
	Status             pulumi.StringOutput                            `pulumi:"status"`
}

// NewMdbElasticSearchCluster registers a new resource with the given unique name, arguments, and options.
func NewMdbElasticSearchCluster(ctx *pulumi.Context,
	name string, args *MdbElasticSearchClusterArgs, opts ...pulumi.ResourceOption) (*MdbElasticSearchCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Config == nil {
		return nil, errors.New("invalid value for required argument 'Config'")
	}
	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource MdbElasticSearchCluster
	err := ctx.RegisterResource("yandex:index/mdbElasticSearchCluster:MdbElasticSearchCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMdbElasticSearchCluster gets an existing MdbElasticSearchCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMdbElasticSearchCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MdbElasticSearchClusterState, opts ...pulumi.ResourceOption) (*MdbElasticSearchCluster, error) {
	var resource MdbElasticSearchCluster
	err := ctx.ReadResource("yandex:index/mdbElasticSearchCluster:MdbElasticSearchCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MdbElasticSearchCluster resources.
type mdbElasticSearchClusterState struct {
	Config             *MdbElasticSearchClusterConfig            `pulumi:"config"`
	CreatedAt          *string                                   `pulumi:"createdAt"`
	DeletionProtection *bool                                     `pulumi:"deletionProtection"`
	Description        *string                                   `pulumi:"description"`
	Environment        *string                                   `pulumi:"environment"`
	FolderId           *string                                   `pulumi:"folderId"`
	Health             *string                                   `pulumi:"health"`
	Hosts              []MdbElasticSearchClusterHost             `pulumi:"hosts"`
	Labels             map[string]string                         `pulumi:"labels"`
	MaintenanceWindow  *MdbElasticSearchClusterMaintenanceWindow `pulumi:"maintenanceWindow"`
	Name               *string                                   `pulumi:"name"`
	NetworkId          *string                                   `pulumi:"networkId"`
	SecurityGroupIds   []string                                  `pulumi:"securityGroupIds"`
	ServiceAccountId   *string                                   `pulumi:"serviceAccountId"`
	Status             *string                                   `pulumi:"status"`
}

type MdbElasticSearchClusterState struct {
	Config             MdbElasticSearchClusterConfigPtrInput
	CreatedAt          pulumi.StringPtrInput
	DeletionProtection pulumi.BoolPtrInput
	Description        pulumi.StringPtrInput
	Environment        pulumi.StringPtrInput
	FolderId           pulumi.StringPtrInput
	Health             pulumi.StringPtrInput
	Hosts              MdbElasticSearchClusterHostArrayInput
	Labels             pulumi.StringMapInput
	MaintenanceWindow  MdbElasticSearchClusterMaintenanceWindowPtrInput
	Name               pulumi.StringPtrInput
	NetworkId          pulumi.StringPtrInput
	SecurityGroupIds   pulumi.StringArrayInput
	ServiceAccountId   pulumi.StringPtrInput
	Status             pulumi.StringPtrInput
}

func (MdbElasticSearchClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*mdbElasticSearchClusterState)(nil)).Elem()
}

type mdbElasticSearchClusterArgs struct {
	Config             MdbElasticSearchClusterConfig             `pulumi:"config"`
	DeletionProtection *bool                                     `pulumi:"deletionProtection"`
	Description        *string                                   `pulumi:"description"`
	Environment        string                                    `pulumi:"environment"`
	FolderId           *string                                   `pulumi:"folderId"`
	Hosts              []MdbElasticSearchClusterHost             `pulumi:"hosts"`
	Labels             map[string]string                         `pulumi:"labels"`
	MaintenanceWindow  *MdbElasticSearchClusterMaintenanceWindow `pulumi:"maintenanceWindow"`
	Name               *string                                   `pulumi:"name"`
	NetworkId          string                                    `pulumi:"networkId"`
	SecurityGroupIds   []string                                  `pulumi:"securityGroupIds"`
	ServiceAccountId   *string                                   `pulumi:"serviceAccountId"`
}

// The set of arguments for constructing a MdbElasticSearchCluster resource.
type MdbElasticSearchClusterArgs struct {
	Config             MdbElasticSearchClusterConfigInput
	DeletionProtection pulumi.BoolPtrInput
	Description        pulumi.StringPtrInput
	Environment        pulumi.StringInput
	FolderId           pulumi.StringPtrInput
	Hosts              MdbElasticSearchClusterHostArrayInput
	Labels             pulumi.StringMapInput
	MaintenanceWindow  MdbElasticSearchClusterMaintenanceWindowPtrInput
	Name               pulumi.StringPtrInput
	NetworkId          pulumi.StringInput
	SecurityGroupIds   pulumi.StringArrayInput
	ServiceAccountId   pulumi.StringPtrInput
}

func (MdbElasticSearchClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mdbElasticSearchClusterArgs)(nil)).Elem()
}

type MdbElasticSearchClusterInput interface {
	pulumi.Input

	ToMdbElasticSearchClusterOutput() MdbElasticSearchClusterOutput
	ToMdbElasticSearchClusterOutputWithContext(ctx context.Context) MdbElasticSearchClusterOutput
}

func (*MdbElasticSearchCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbElasticSearchCluster)(nil)).Elem()
}

func (i *MdbElasticSearchCluster) ToMdbElasticSearchClusterOutput() MdbElasticSearchClusterOutput {
	return i.ToMdbElasticSearchClusterOutputWithContext(context.Background())
}

func (i *MdbElasticSearchCluster) ToMdbElasticSearchClusterOutputWithContext(ctx context.Context) MdbElasticSearchClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbElasticSearchClusterOutput)
}

// MdbElasticSearchClusterArrayInput is an input type that accepts MdbElasticSearchClusterArray and MdbElasticSearchClusterArrayOutput values.
// You can construct a concrete instance of `MdbElasticSearchClusterArrayInput` via:
//
//	MdbElasticSearchClusterArray{ MdbElasticSearchClusterArgs{...} }
type MdbElasticSearchClusterArrayInput interface {
	pulumi.Input

	ToMdbElasticSearchClusterArrayOutput() MdbElasticSearchClusterArrayOutput
	ToMdbElasticSearchClusterArrayOutputWithContext(context.Context) MdbElasticSearchClusterArrayOutput
}

type MdbElasticSearchClusterArray []MdbElasticSearchClusterInput

func (MdbElasticSearchClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MdbElasticSearchCluster)(nil)).Elem()
}

func (i MdbElasticSearchClusterArray) ToMdbElasticSearchClusterArrayOutput() MdbElasticSearchClusterArrayOutput {
	return i.ToMdbElasticSearchClusterArrayOutputWithContext(context.Background())
}

func (i MdbElasticSearchClusterArray) ToMdbElasticSearchClusterArrayOutputWithContext(ctx context.Context) MdbElasticSearchClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbElasticSearchClusterArrayOutput)
}

// MdbElasticSearchClusterMapInput is an input type that accepts MdbElasticSearchClusterMap and MdbElasticSearchClusterMapOutput values.
// You can construct a concrete instance of `MdbElasticSearchClusterMapInput` via:
//
//	MdbElasticSearchClusterMap{ "key": MdbElasticSearchClusterArgs{...} }
type MdbElasticSearchClusterMapInput interface {
	pulumi.Input

	ToMdbElasticSearchClusterMapOutput() MdbElasticSearchClusterMapOutput
	ToMdbElasticSearchClusterMapOutputWithContext(context.Context) MdbElasticSearchClusterMapOutput
}

type MdbElasticSearchClusterMap map[string]MdbElasticSearchClusterInput

func (MdbElasticSearchClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MdbElasticSearchCluster)(nil)).Elem()
}

func (i MdbElasticSearchClusterMap) ToMdbElasticSearchClusterMapOutput() MdbElasticSearchClusterMapOutput {
	return i.ToMdbElasticSearchClusterMapOutputWithContext(context.Background())
}

func (i MdbElasticSearchClusterMap) ToMdbElasticSearchClusterMapOutputWithContext(ctx context.Context) MdbElasticSearchClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbElasticSearchClusterMapOutput)
}

type MdbElasticSearchClusterOutput struct{ *pulumi.OutputState }

func (MdbElasticSearchClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbElasticSearchCluster)(nil)).Elem()
}

func (o MdbElasticSearchClusterOutput) ToMdbElasticSearchClusterOutput() MdbElasticSearchClusterOutput {
	return o
}

func (o MdbElasticSearchClusterOutput) ToMdbElasticSearchClusterOutputWithContext(ctx context.Context) MdbElasticSearchClusterOutput {
	return o
}

func (o MdbElasticSearchClusterOutput) Config() MdbElasticSearchClusterConfigOutput {
	return o.ApplyT(func(v *MdbElasticSearchCluster) MdbElasticSearchClusterConfigOutput { return v.Config }).(MdbElasticSearchClusterConfigOutput)
}

func (o MdbElasticSearchClusterOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbElasticSearchCluster) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o MdbElasticSearchClusterOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v *MdbElasticSearchCluster) pulumi.BoolOutput { return v.DeletionProtection }).(pulumi.BoolOutput)
}

func (o MdbElasticSearchClusterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbElasticSearchCluster) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o MdbElasticSearchClusterOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbElasticSearchCluster) pulumi.StringOutput { return v.Environment }).(pulumi.StringOutput)
}

func (o MdbElasticSearchClusterOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbElasticSearchCluster) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

func (o MdbElasticSearchClusterOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbElasticSearchCluster) pulumi.StringOutput { return v.Health }).(pulumi.StringOutput)
}

func (o MdbElasticSearchClusterOutput) Hosts() MdbElasticSearchClusterHostArrayOutput {
	return o.ApplyT(func(v *MdbElasticSearchCluster) MdbElasticSearchClusterHostArrayOutput { return v.Hosts }).(MdbElasticSearchClusterHostArrayOutput)
}

func (o MdbElasticSearchClusterOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MdbElasticSearchCluster) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o MdbElasticSearchClusterOutput) MaintenanceWindow() MdbElasticSearchClusterMaintenanceWindowOutput {
	return o.ApplyT(func(v *MdbElasticSearchCluster) MdbElasticSearchClusterMaintenanceWindowOutput {
		return v.MaintenanceWindow
	}).(MdbElasticSearchClusterMaintenanceWindowOutput)
}

func (o MdbElasticSearchClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbElasticSearchCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o MdbElasticSearchClusterOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbElasticSearchCluster) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

func (o MdbElasticSearchClusterOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MdbElasticSearchCluster) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o MdbElasticSearchClusterOutput) ServiceAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbElasticSearchCluster) pulumi.StringPtrOutput { return v.ServiceAccountId }).(pulumi.StringPtrOutput)
}

func (o MdbElasticSearchClusterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbElasticSearchCluster) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type MdbElasticSearchClusterArrayOutput struct{ *pulumi.OutputState }

func (MdbElasticSearchClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MdbElasticSearchCluster)(nil)).Elem()
}

func (o MdbElasticSearchClusterArrayOutput) ToMdbElasticSearchClusterArrayOutput() MdbElasticSearchClusterArrayOutput {
	return o
}

func (o MdbElasticSearchClusterArrayOutput) ToMdbElasticSearchClusterArrayOutputWithContext(ctx context.Context) MdbElasticSearchClusterArrayOutput {
	return o
}

func (o MdbElasticSearchClusterArrayOutput) Index(i pulumi.IntInput) MdbElasticSearchClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MdbElasticSearchCluster {
		return vs[0].([]*MdbElasticSearchCluster)[vs[1].(int)]
	}).(MdbElasticSearchClusterOutput)
}

type MdbElasticSearchClusterMapOutput struct{ *pulumi.OutputState }

func (MdbElasticSearchClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MdbElasticSearchCluster)(nil)).Elem()
}

func (o MdbElasticSearchClusterMapOutput) ToMdbElasticSearchClusterMapOutput() MdbElasticSearchClusterMapOutput {
	return o
}

func (o MdbElasticSearchClusterMapOutput) ToMdbElasticSearchClusterMapOutputWithContext(ctx context.Context) MdbElasticSearchClusterMapOutput {
	return o
}

func (o MdbElasticSearchClusterMapOutput) MapIndex(k pulumi.StringInput) MdbElasticSearchClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MdbElasticSearchCluster {
		return vs[0].(map[string]*MdbElasticSearchCluster)[vs[1].(string)]
	}).(MdbElasticSearchClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MdbElasticSearchClusterInput)(nil)).Elem(), &MdbElasticSearchCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*MdbElasticSearchClusterArrayInput)(nil)).Elem(), MdbElasticSearchClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MdbElasticSearchClusterMapInput)(nil)).Elem(), MdbElasticSearchClusterMap{})
	pulumi.RegisterOutputType(MdbElasticSearchClusterOutput{})
	pulumi.RegisterOutputType(MdbElasticSearchClusterArrayOutput{})
	pulumi.RegisterOutputType(MdbElasticSearchClusterMapOutput{})
}
