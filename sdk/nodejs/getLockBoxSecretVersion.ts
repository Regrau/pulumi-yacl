// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about Yandex Cloud Lockbox secret version. For more information,
 * see [the official documentation](https://cloud.yandex.com/en/docs/lockbox/).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@pulumi/yandex";
 *
 * const mySecretVersion = yandex.getLockBoxSecretVersion({
 *     secretId: "some-secret-id",
 *     versionId: "some-version-id",
 * });
 * export const mySecretEntries = mySecretVersion.then(mySecretVersion => mySecretVersion.entries);
 * ```
 *
 * If you're creating the secret in the same project, then you should indicate `versionId`,
 * since otherwise you may refer to a wrong version of the secret
 * (e.g. the first version, when it is still empty).
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@pulumi/yandex";
 *
 * const mySecret = new yandex.LockboxSecret("mySecret", {});
 * // ...
 * const myVersionlockboxSecretVersion = new yandex.LockboxSecretVersion("myVersionlockboxSecretVersion", {secretId: mySecret.id});
 * // ...
 * const myVersionLockBoxSecretVersion = yandex.getLockBoxSecretVersionOutput({
 *     secretId: mySecret.id,
 *     versionId: myVersionlockboxSecretVersion.id,
 * });
 * export const mySecretEntries = myVersionlockboxSecretVersion.entries;
 * ```
 */
export function getLockBoxSecretVersion(args: GetLockBoxSecretVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetLockBoxSecretVersionResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("yandex:index/getLockBoxSecretVersion:getLockBoxSecretVersion", {
        "secretId": args.secretId,
        "versionId": args.versionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getLockBoxSecretVersion.
 */
export interface GetLockBoxSecretVersionArgs {
    /**
     * The Yandex Cloud Lockbox secret ID.
     */
    secretId: string;
    /**
     * The Yandex Cloud Lockbox secret version ID.
     */
    versionId?: string;
}

/**
 * A collection of values returned by getLockBoxSecretVersion.
 */
export interface GetLockBoxSecretVersionResult {
    /**
     * List of entries in the Yandex Cloud Lockbox secret version.
     */
    readonly entries: outputs.GetLockBoxSecretVersionEntry[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly secretId: string;
    readonly versionId: string;
}

export function getLockBoxSecretVersionOutput(args: GetLockBoxSecretVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLockBoxSecretVersionResult> {
    return pulumi.output(args).apply(a => getLockBoxSecretVersion(a, opts))
}

/**
 * A collection of arguments for invoking getLockBoxSecretVersion.
 */
export interface GetLockBoxSecretVersionOutputArgs {
    /**
     * The Yandex Cloud Lockbox secret ID.
     */
    secretId: pulumi.Input<string>;
    /**
     * The Yandex Cloud Lockbox secret version ID.
     */
    versionId?: pulumi.Input<string>;
}
