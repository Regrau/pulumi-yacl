// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class MessageQueue extends pulumi.CustomResource {
    /**
     * Get an existing MessageQueue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MessageQueueState, opts?: pulumi.CustomResourceOptions): MessageQueue {
        return new MessageQueue(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/messageQueue:MessageQueue';

    /**
     * Returns true if the given object is an instance of MessageQueue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MessageQueue {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MessageQueue.__pulumiType;
    }

    public readonly accessKey!: pulumi.Output<string | undefined>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly contentBasedDeduplication!: pulumi.Output<boolean | undefined>;
    public readonly delaySeconds!: pulumi.Output<number | undefined>;
    public readonly fifoQueue!: pulumi.Output<boolean | undefined>;
    public readonly maxMessageSize!: pulumi.Output<number | undefined>;
    public readonly messageRetentionSeconds!: pulumi.Output<number | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly namePrefix!: pulumi.Output<string | undefined>;
    public readonly receiveWaitTimeSeconds!: pulumi.Output<number | undefined>;
    public readonly redrivePolicy!: pulumi.Output<string | undefined>;
    public readonly regionId!: pulumi.Output<string | undefined>;
    public readonly secretKey!: pulumi.Output<string | undefined>;
    public readonly visibilityTimeoutSeconds!: pulumi.Output<number | undefined>;

    /**
     * Create a MessageQueue resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: MessageQueueArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MessageQueueArgs | MessageQueueState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MessageQueueState | undefined;
            resourceInputs["accessKey"] = state ? state.accessKey : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["contentBasedDeduplication"] = state ? state.contentBasedDeduplication : undefined;
            resourceInputs["delaySeconds"] = state ? state.delaySeconds : undefined;
            resourceInputs["fifoQueue"] = state ? state.fifoQueue : undefined;
            resourceInputs["maxMessageSize"] = state ? state.maxMessageSize : undefined;
            resourceInputs["messageRetentionSeconds"] = state ? state.messageRetentionSeconds : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namePrefix"] = state ? state.namePrefix : undefined;
            resourceInputs["receiveWaitTimeSeconds"] = state ? state.receiveWaitTimeSeconds : undefined;
            resourceInputs["redrivePolicy"] = state ? state.redrivePolicy : undefined;
            resourceInputs["regionId"] = state ? state.regionId : undefined;
            resourceInputs["secretKey"] = state ? state.secretKey : undefined;
            resourceInputs["visibilityTimeoutSeconds"] = state ? state.visibilityTimeoutSeconds : undefined;
        } else {
            const args = argsOrState as MessageQueueArgs | undefined;
            resourceInputs["accessKey"] = args ? args.accessKey : undefined;
            resourceInputs["contentBasedDeduplication"] = args ? args.contentBasedDeduplication : undefined;
            resourceInputs["delaySeconds"] = args ? args.delaySeconds : undefined;
            resourceInputs["fifoQueue"] = args ? args.fifoQueue : undefined;
            resourceInputs["maxMessageSize"] = args ? args.maxMessageSize : undefined;
            resourceInputs["messageRetentionSeconds"] = args ? args.messageRetentionSeconds : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namePrefix"] = args ? args.namePrefix : undefined;
            resourceInputs["receiveWaitTimeSeconds"] = args ? args.receiveWaitTimeSeconds : undefined;
            resourceInputs["redrivePolicy"] = args ? args.redrivePolicy : undefined;
            resourceInputs["regionId"] = args ? args.regionId : undefined;
            resourceInputs["secretKey"] = args ? args.secretKey : undefined;
            resourceInputs["visibilityTimeoutSeconds"] = args ? args.visibilityTimeoutSeconds : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MessageQueue.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MessageQueue resources.
 */
export interface MessageQueueState {
    accessKey?: pulumi.Input<string>;
    arn?: pulumi.Input<string>;
    contentBasedDeduplication?: pulumi.Input<boolean>;
    delaySeconds?: pulumi.Input<number>;
    fifoQueue?: pulumi.Input<boolean>;
    maxMessageSize?: pulumi.Input<number>;
    messageRetentionSeconds?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    namePrefix?: pulumi.Input<string>;
    receiveWaitTimeSeconds?: pulumi.Input<number>;
    redrivePolicy?: pulumi.Input<string>;
    regionId?: pulumi.Input<string>;
    secretKey?: pulumi.Input<string>;
    visibilityTimeoutSeconds?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a MessageQueue resource.
 */
export interface MessageQueueArgs {
    accessKey?: pulumi.Input<string>;
    contentBasedDeduplication?: pulumi.Input<boolean>;
    delaySeconds?: pulumi.Input<number>;
    fifoQueue?: pulumi.Input<boolean>;
    maxMessageSize?: pulumi.Input<number>;
    messageRetentionSeconds?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    namePrefix?: pulumi.Input<string>;
    receiveWaitTimeSeconds?: pulumi.Input<number>;
    redrivePolicy?: pulumi.Input<string>;
    regionId?: pulumi.Input<string>;
    secretKey?: pulumi.Input<string>;
    visibilityTimeoutSeconds?: pulumi.Input<number>;
}
