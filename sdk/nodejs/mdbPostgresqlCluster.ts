// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MdbPostgresqlCluster extends pulumi.CustomResource {
    /**
     * Get an existing MdbPostgresqlCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MdbPostgresqlClusterState, opts?: pulumi.CustomResourceOptions): MdbPostgresqlCluster {
        return new MdbPostgresqlCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/mdbPostgresqlCluster:MdbPostgresqlCluster';

    /**
     * Returns true if the given object is an instance of MdbPostgresqlCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MdbPostgresqlCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MdbPostgresqlCluster.__pulumiType;
    }

    public readonly config!: pulumi.Output<outputs.MdbPostgresqlClusterConfig>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * @deprecated to manage databases, please switch to using a separate resource type yandex_mdb_postgresql_database
     */
    public readonly databases!: pulumi.Output<outputs.MdbPostgresqlClusterDatabase[] | undefined>;
    public readonly deletionProtection!: pulumi.Output<boolean>;
    public readonly description!: pulumi.Output<string>;
    public readonly environment!: pulumi.Output<string>;
    public readonly folderId!: pulumi.Output<string>;
    public /*out*/ readonly health!: pulumi.Output<string>;
    public readonly hostGroupIds!: pulumi.Output<string[]>;
    public readonly hostMasterName!: pulumi.Output<string>;
    public readonly hosts!: pulumi.Output<outputs.MdbPostgresqlClusterHost[]>;
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    public readonly maintenanceWindow!: pulumi.Output<outputs.MdbPostgresqlClusterMaintenanceWindow>;
    public readonly name!: pulumi.Output<string>;
    public readonly networkId!: pulumi.Output<string>;
    public readonly restore!: pulumi.Output<outputs.MdbPostgresqlClusterRestore | undefined>;
    public readonly securityGroupIds!: pulumi.Output<string[]>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * @deprecated to manage users, please switch to using a separate resource type yandex_mdb_postgresql_user
     */
    public readonly users!: pulumi.Output<outputs.MdbPostgresqlClusterUser[] | undefined>;

    /**
     * Create a MdbPostgresqlCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MdbPostgresqlClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MdbPostgresqlClusterArgs | MdbPostgresqlClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MdbPostgresqlClusterState | undefined;
            resourceInputs["config"] = state ? state.config : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["databases"] = state ? state.databases : undefined;
            resourceInputs["deletionProtection"] = state ? state.deletionProtection : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["environment"] = state ? state.environment : undefined;
            resourceInputs["folderId"] = state ? state.folderId : undefined;
            resourceInputs["health"] = state ? state.health : undefined;
            resourceInputs["hostGroupIds"] = state ? state.hostGroupIds : undefined;
            resourceInputs["hostMasterName"] = state ? state.hostMasterName : undefined;
            resourceInputs["hosts"] = state ? state.hosts : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["maintenanceWindow"] = state ? state.maintenanceWindow : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["restore"] = state ? state.restore : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["users"] = state ? state.users : undefined;
        } else {
            const args = argsOrState as MdbPostgresqlClusterArgs | undefined;
            if ((!args || args.config === undefined) && !opts.urn) {
                throw new Error("Missing required property 'config'");
            }
            if ((!args || args.environment === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environment'");
            }
            if ((!args || args.hosts === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hosts'");
            }
            if ((!args || args.networkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            resourceInputs["config"] = args ? args.config : undefined;
            resourceInputs["databases"] = args ? args.databases : undefined;
            resourceInputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["environment"] = args ? args.environment : undefined;
            resourceInputs["folderId"] = args ? args.folderId : undefined;
            resourceInputs["hostGroupIds"] = args ? args.hostGroupIds : undefined;
            resourceInputs["hostMasterName"] = args ? args.hostMasterName : undefined;
            resourceInputs["hosts"] = args ? args.hosts : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["maintenanceWindow"] = args ? args.maintenanceWindow : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkId"] = args ? args.networkId : undefined;
            resourceInputs["restore"] = args ? args.restore : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["users"] = args ? args.users : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["health"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MdbPostgresqlCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MdbPostgresqlCluster resources.
 */
export interface MdbPostgresqlClusterState {
    config?: pulumi.Input<inputs.MdbPostgresqlClusterConfig>;
    createdAt?: pulumi.Input<string>;
    /**
     * @deprecated to manage databases, please switch to using a separate resource type yandex_mdb_postgresql_database
     */
    databases?: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlClusterDatabase>[]>;
    deletionProtection?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    environment?: pulumi.Input<string>;
    folderId?: pulumi.Input<string>;
    health?: pulumi.Input<string>;
    hostGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    hostMasterName?: pulumi.Input<string>;
    hosts?: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlClusterHost>[]>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    maintenanceWindow?: pulumi.Input<inputs.MdbPostgresqlClusterMaintenanceWindow>;
    name?: pulumi.Input<string>;
    networkId?: pulumi.Input<string>;
    restore?: pulumi.Input<inputs.MdbPostgresqlClusterRestore>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    status?: pulumi.Input<string>;
    /**
     * @deprecated to manage users, please switch to using a separate resource type yandex_mdb_postgresql_user
     */
    users?: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlClusterUser>[]>;
}

/**
 * The set of arguments for constructing a MdbPostgresqlCluster resource.
 */
export interface MdbPostgresqlClusterArgs {
    config: pulumi.Input<inputs.MdbPostgresqlClusterConfig>;
    /**
     * @deprecated to manage databases, please switch to using a separate resource type yandex_mdb_postgresql_database
     */
    databases?: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlClusterDatabase>[]>;
    deletionProtection?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    environment: pulumi.Input<string>;
    folderId?: pulumi.Input<string>;
    hostGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    hostMasterName?: pulumi.Input<string>;
    hosts: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlClusterHost>[]>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    maintenanceWindow?: pulumi.Input<inputs.MdbPostgresqlClusterMaintenanceWindow>;
    name?: pulumi.Input<string>;
    networkId: pulumi.Input<string>;
    restore?: pulumi.Input<inputs.MdbPostgresqlClusterRestore>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated to manage users, please switch to using a separate resource type yandex_mdb_postgresql_user
     */
    users?: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlClusterUser>[]>;
}
