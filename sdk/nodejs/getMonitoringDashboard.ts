// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about a Yandex Monitoring dashboard.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@pulumi/yandex";
 *
 * const myDashboard = pulumi.output(yandex.getMonitoringDashboard({
 *     dashboardId: "some_instance_dashboard_id",
 * }));
 * ```
 */
export function getMonitoringDashboard(args?: GetMonitoringDashboardArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitoringDashboardResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("yandex:index/getMonitoringDashboard:getMonitoringDashboard", {
        "dashboardId": args.dashboardId,
        "description": args.description,
        "folderId": args.folderId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getMonitoringDashboard.
 */
export interface GetMonitoringDashboardArgs {
    /**
     * Dashboard ID.
     */
    dashboardId?: string;
    /**
     * Chart description in dashboard (not enabled in UI).
     */
    description?: string;
    /**
     * Folder that the resource belongs to. If value is omitted, the default provider folder is used.
     */
    folderId?: string;
    /**
     * - Name of the Dashboard.
     */
    name?: string;
}

/**
 * A collection of values returned by getMonitoringDashboard.
 */
export interface GetMonitoringDashboardResult {
    readonly dashboardId?: string;
    /**
     * Chart description in dashboard (not enabled in UI).
     */
    readonly description?: string;
    /**
     * Labels folder ID.
     */
    readonly folderId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A set of key/value label pairs to assign to the Dashboard.
     */
    readonly labels: {[key: string]: string};
    /**
     * Series name or empty.
     */
    readonly name?: string;
    /**
     * Dashboard parametrization
     */
    readonly parametrizations: outputs.GetMonitoringDashboardParametrization[];
    /**
     * Inside chart title.
     */
    readonly title: string;
    /**
     * Widgets
     */
    readonly widgets: outputs.GetMonitoringDashboardWidget[];
}

export function getMonitoringDashboardOutput(args?: GetMonitoringDashboardOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMonitoringDashboardResult> {
    return pulumi.output(args).apply(a => getMonitoringDashboard(a, opts))
}

/**
 * A collection of arguments for invoking getMonitoringDashboard.
 */
export interface GetMonitoringDashboardOutputArgs {
    /**
     * Dashboard ID.
     */
    dashboardId?: pulumi.Input<string>;
    /**
     * Chart description in dashboard (not enabled in UI).
     */
    description?: pulumi.Input<string>;
    /**
     * Folder that the resource belongs to. If value is omitted, the default provider folder is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * - Name of the Dashboard.
     */
    name?: pulumi.Input<string>;
}
