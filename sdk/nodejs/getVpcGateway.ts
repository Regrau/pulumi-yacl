// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about a Yandex VPC gateway. For more information, see
 * [Yandex.Cloud VPC](https://cloud.yandex.com/docs/vpc/concepts/index).
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@pulumi/yandex";
 *
 * const defaultVpcGateway = pulumi.output(yandex.getVpcGateway({
 *     gatewayId: "my-gateway-id",
 * }));
 * ```
 *
 * This data source is used to define [VPC Gateways] that can be used by other resources.
 */
export function getVpcGateway(args?: GetVpcGatewayArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcGatewayResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("yandex:index/getVpcGateway:getVpcGateway", {
        "folderId": args.folderId,
        "gatewayId": args.gatewayId,
        "name": args.name,
        "sharedEgressGateway": args.sharedEgressGateway,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpcGateway.
 */
export interface GetVpcGatewayArgs {
    /**
     * Folder that the resource belongs to. If value is omitted, the default provider folder is used.
     */
    folderId?: string;
    /**
     * ID of the VPC Gateway.
     */
    gatewayId?: string;
    /**
     * Name of the VPC Gateway.
     */
    name?: string;
    /**
     * Shared egress gateway configuration
     */
    sharedEgressGateway?: inputs.GetVpcGatewaySharedEgressGateway;
}

/**
 * A collection of values returned by getVpcGateway.
 */
export interface GetVpcGatewayResult {
    /**
     * Creation timestamp of this VPC Gateway.
     */
    readonly createdAt: string;
    /**
     * Description of the VPC Gateway.
     */
    readonly description: string;
    readonly folderId: string;
    readonly gatewayId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Labels assigned to this VPC Gateway.
     */
    readonly labels: {[key: string]: string};
    readonly name: string;
    /**
     * Shared egress gateway configuration
     */
    readonly sharedEgressGateway?: outputs.GetVpcGatewaySharedEgressGateway;
}

export function getVpcGatewayOutput(args?: GetVpcGatewayOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcGatewayResult> {
    return pulumi.output(args).apply(a => getVpcGateway(a, opts))
}

/**
 * A collection of arguments for invoking getVpcGateway.
 */
export interface GetVpcGatewayOutputArgs {
    /**
     * Folder that the resource belongs to. If value is omitted, the default provider folder is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * ID of the VPC Gateway.
     */
    gatewayId?: pulumi.Input<string>;
    /**
     * Name of the VPC Gateway.
     */
    name?: pulumi.Input<string>;
    /**
     * Shared egress gateway configuration
     */
    sharedEgressGateway?: pulumi.Input<inputs.GetVpcGatewaySharedEgressGatewayArgs>;
}
