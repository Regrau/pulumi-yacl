// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class VpcSecurityGroupRule extends pulumi.CustomResource {
    /**
     * Get an existing VpcSecurityGroupRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcSecurityGroupRuleState, opts?: pulumi.CustomResourceOptions): VpcSecurityGroupRule {
        return new VpcSecurityGroupRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/vpcSecurityGroupRule:VpcSecurityGroupRule';

    /**
     * Returns true if the given object is an instance of VpcSecurityGroupRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcSecurityGroupRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcSecurityGroupRule.__pulumiType;
    }

    public readonly description!: pulumi.Output<string | undefined>;
    public readonly direction!: pulumi.Output<string>;
    public readonly fromPort!: pulumi.Output<number | undefined>;
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    public readonly port!: pulumi.Output<number | undefined>;
    public readonly predefinedTarget!: pulumi.Output<string | undefined>;
    public readonly protocol!: pulumi.Output<string | undefined>;
    public readonly securityGroupBinding!: pulumi.Output<string>;
    public readonly securityGroupId!: pulumi.Output<string | undefined>;
    public readonly toPort!: pulumi.Output<number | undefined>;
    public readonly v4CidrBlocks!: pulumi.Output<string[] | undefined>;
    public readonly v6CidrBlocks!: pulumi.Output<string[] | undefined>;

    /**
     * Create a VpcSecurityGroupRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcSecurityGroupRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcSecurityGroupRuleArgs | VpcSecurityGroupRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcSecurityGroupRuleState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["direction"] = state ? state.direction : undefined;
            resourceInputs["fromPort"] = state ? state.fromPort : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["predefinedTarget"] = state ? state.predefinedTarget : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["securityGroupBinding"] = state ? state.securityGroupBinding : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["toPort"] = state ? state.toPort : undefined;
            resourceInputs["v4CidrBlocks"] = state ? state.v4CidrBlocks : undefined;
            resourceInputs["v6CidrBlocks"] = state ? state.v6CidrBlocks : undefined;
        } else {
            const args = argsOrState as VpcSecurityGroupRuleArgs | undefined;
            if ((!args || args.direction === undefined) && !opts.urn) {
                throw new Error("Missing required property 'direction'");
            }
            if ((!args || args.securityGroupBinding === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupBinding'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["direction"] = args ? args.direction : undefined;
            resourceInputs["fromPort"] = args ? args.fromPort : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["predefinedTarget"] = args ? args.predefinedTarget : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["securityGroupBinding"] = args ? args.securityGroupBinding : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["toPort"] = args ? args.toPort : undefined;
            resourceInputs["v4CidrBlocks"] = args ? args.v4CidrBlocks : undefined;
            resourceInputs["v6CidrBlocks"] = args ? args.v6CidrBlocks : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcSecurityGroupRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VpcSecurityGroupRule resources.
 */
export interface VpcSecurityGroupRuleState {
    description?: pulumi.Input<string>;
    direction?: pulumi.Input<string>;
    fromPort?: pulumi.Input<number>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    port?: pulumi.Input<number>;
    predefinedTarget?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    securityGroupBinding?: pulumi.Input<string>;
    securityGroupId?: pulumi.Input<string>;
    toPort?: pulumi.Input<number>;
    v4CidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    v6CidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a VpcSecurityGroupRule resource.
 */
export interface VpcSecurityGroupRuleArgs {
    description?: pulumi.Input<string>;
    direction: pulumi.Input<string>;
    fromPort?: pulumi.Input<number>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    port?: pulumi.Input<number>;
    predefinedTarget?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    securityGroupBinding: pulumi.Input<string>;
    securityGroupId?: pulumi.Input<string>;
    toPort?: pulumi.Input<number>;
    v4CidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    v6CidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
}
