// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about a Yandex Managed MySQL user. For more information, see
 * [the official documentation](https://cloud.yandex.com/docs/managed-mysql/).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@pulumi/yandex";
 *
 * const foo = pulumi.output(yandex.getMdbMysqlUser({
 *     clusterId: "some_cluster_id",
 *     name: "test",
 * }));
 *
 * export const permission = foo.permissions!;
 * ```
 */
export function getMdbMysqlUser(args: GetMdbMysqlUserArgs, opts?: pulumi.InvokeOptions): Promise<GetMdbMysqlUserResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("yandex:index/getMdbMysqlUser:getMdbMysqlUser", {
        "clusterId": args.clusterId,
        "name": args.name,
        "permissions": args.permissions,
    }, opts);
}

/**
 * A collection of arguments for invoking getMdbMysqlUser.
 */
export interface GetMdbMysqlUserArgs {
    /**
     * The ID of the MySQL cluster.
     */
    clusterId: string;
    /**
     * The name of the MySQL user.
     */
    name: string;
    /**
     * Set of permissions granted to the user. The structure is documented below.
     */
    permissions?: inputs.GetMdbMysqlUserPermission[];
}

/**
 * A collection of values returned by getMdbMysqlUser.
 */
export interface GetMdbMysqlUserResult {
    /**
     * Authentication plugin. Allowed values: `MYSQL_NATIVE_PASSWORD`, `CACHING_SHA2_PASSWORD`, `SHA256_PASSWORD`
     */
    readonly authenticationPlugin: string;
    readonly clusterId: string;
    /**
     * User's connection limits. The structure is documented below.
     */
    readonly connectionLimits: outputs.GetMdbMysqlUserConnectionLimit[];
    /**
     * List user's global permissions. Allowed values: `REPLICATION_CLIENT`, `REPLICATION_SLAVE`, `PROCESS` or empty list.
     */
    readonly globalPermissions: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the user.
     */
    readonly name: string;
    /**
     * Set of permissions granted to the user. The structure is documented below.
     */
    readonly permissions: outputs.GetMdbMysqlUserPermission[];
}

export function getMdbMysqlUserOutput(args: GetMdbMysqlUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMdbMysqlUserResult> {
    return pulumi.output(args).apply(a => getMdbMysqlUser(a, opts))
}

/**
 * A collection of arguments for invoking getMdbMysqlUser.
 */
export interface GetMdbMysqlUserOutputArgs {
    /**
     * The ID of the MySQL cluster.
     */
    clusterId: pulumi.Input<string>;
    /**
     * The name of the MySQL user.
     */
    name: pulumi.Input<string>;
    /**
     * Set of permissions granted to the user. The structure is documented below.
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.GetMdbMysqlUserPermissionArgs>[]>;
}
