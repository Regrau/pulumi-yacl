// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Outputs
{

    [OutputType]
    public sealed class DatatransferEndpointSettingsKafkaSource
    {
        /// <summary>
        /// Authentication data.
        /// </summary>
        public readonly Outputs.DatatransferEndpointSettingsKafkaSourceAuth? Auth;
        /// <summary>
        /// Connection settings. The structure is documented below.
        /// </summary>
        public readonly Outputs.DatatransferEndpointSettingsKafkaSourceConnection? Connection;
        /// <summary>
        /// Data parsing parameters. If not set, the source messages are read in raw.
        /// </summary>
        public readonly Outputs.DatatransferEndpointSettingsKafkaSourceParser? Parser;
        /// <summary>
        /// List of security groups that the transfer associated with this endpoint should use.
        /// </summary>
        public readonly ImmutableArray<string> SecurityGroups;
        /// <summary>
        /// Full source topic name.
        /// </summary>
        public readonly string? TopicName;
        /// <summary>
        /// Transform data with a custom Cloud Function.
        /// </summary>
        public readonly Outputs.DatatransferEndpointSettingsKafkaSourceTransformer? Transformer;

        [OutputConstructor]
        private DatatransferEndpointSettingsKafkaSource(
            Outputs.DatatransferEndpointSettingsKafkaSourceAuth? auth,

            Outputs.DatatransferEndpointSettingsKafkaSourceConnection? connection,

            Outputs.DatatransferEndpointSettingsKafkaSourceParser? parser,

            ImmutableArray<string> securityGroups,

            string? topicName,

            Outputs.DatatransferEndpointSettingsKafkaSourceTransformer? transformer)
        {
            Auth = auth;
            Connection = connection;
            Parser = parser;
            SecurityGroups = securityGroups;
            TopicName = topicName;
            Transformer = transformer;
        }
    }
}
