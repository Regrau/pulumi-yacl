// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetLockBoxSecret
    {
        /// <summary>
        /// Get information about Yandex Cloud Lockbox secret. For more information,
        /// see [the official documentation](https://cloud.yandex.com/en/docs/lockbox/).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var mySecret = Yandex.GetLockBoxSecret.Invoke(new()
        ///     {
        ///         SecretId = "some ID",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["mySecretCreatedAt"] = mySecret.Apply(getLockBoxSecretResult =&gt; getLockBoxSecretResult.CreatedAt),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetLockBoxSecretResult> InvokeAsync(GetLockBoxSecretArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLockBoxSecretResult>("yandex:index/getLockBoxSecret:getLockBoxSecret", args ?? new GetLockBoxSecretArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about Yandex Cloud Lockbox secret. For more information,
        /// see [the official documentation](https://cloud.yandex.com/en/docs/lockbox/).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var mySecret = Yandex.GetLockBoxSecret.Invoke(new()
        ///     {
        ///         SecretId = "some ID",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["mySecretCreatedAt"] = mySecret.Apply(getLockBoxSecretResult =&gt; getLockBoxSecretResult.CreatedAt),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetLockBoxSecretResult> Invoke(GetLockBoxSecretInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLockBoxSecretResult>("yandex:index/getLockBoxSecret:getLockBoxSecret", args ?? new GetLockBoxSecretInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLockBoxSecretArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Yandex Cloud Lockbox secret ID.
        /// </summary>
        [Input("secretId", required: true)]
        public string SecretId { get; set; } = null!;

        public GetLockBoxSecretArgs()
        {
        }
        public static new GetLockBoxSecretArgs Empty => new GetLockBoxSecretArgs();
    }

    public sealed class GetLockBoxSecretInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Yandex Cloud Lockbox secret ID.
        /// </summary>
        [Input("secretId", required: true)]
        public Input<string> SecretId { get; set; } = null!;

        public GetLockBoxSecretInvokeArgs()
        {
        }
        public static new GetLockBoxSecretInvokeArgs Empty => new GetLockBoxSecretInvokeArgs();
    }


    [OutputType]
    public sealed class GetLockBoxSecretResult
    {
        /// <summary>
        /// The version creation timestamp.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Information about the current version of the Yandex Cloud Lockbox secret.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLockBoxSecretCurrentVersionResult> CurrentVersions;
        /// <summary>
        /// Whether the Yandex Cloud Lockbox secret is protected from deletion.
        /// </summary>
        public readonly bool DeletionProtection;
        /// <summary>
        /// The version description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// ID of the folder that the Yandex Cloud Lockbox secret belongs to.
        /// </summary>
        public readonly string FolderId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The KMS key used to encrypt the Yandex Cloud Lockbox secret (if an explicit key was used).
        /// </summary>
        public readonly string KmsKeyId;
        /// <summary>
        /// A set of key/value label pairs assigned to the Yandex Cloud Lockbox secret.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The Yandex Cloud Lockbox secret name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The secret ID the version belongs to (it's the same as the `secret_id` argument indicated above)
        /// </summary>
        public readonly string SecretId;
        /// <summary>
        /// The version status.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetLockBoxSecretResult(
            string createdAt,

            ImmutableArray<Outputs.GetLockBoxSecretCurrentVersionResult> currentVersions,

            bool deletionProtection,

            string description,

            string folderId,

            string id,

            string kmsKeyId,

            ImmutableDictionary<string, string> labels,

            string name,

            string secretId,

            string status)
        {
            CreatedAt = createdAt;
            CurrentVersions = currentVersions;
            DeletionProtection = deletionProtection;
            Description = description;
            FolderId = folderId;
            Id = id;
            KmsKeyId = kmsKeyId;
            Labels = labels;
            Name = name;
            SecretId = secretId;
            Status = status;
        }
    }
}
